[#clj-duckling.engine/rule {:name "intersect", :pattern "[(dim :time (fn* [p1__3554#] (not (:latent p1__3554#)))) (dim :time (fn* [p1__3555#] (not (:latent p1__3555#))))]", :production "(intersect %1 %2)"}
 #clj-duckling.engine/rule {:name "intersect by \"of\", \"from\", \"'s\"", :pattern "[(dim :time (fn* [p1__3556#] (not (:latent p1__3556#)))) #\"(?i)i\" (dim :time (fn* [p1__3557#] (not (:latent p1__3557#))))]", :production "(intersect %1 %3)"}
 #clj-duckling.engine/rule {:name "intersect by \",\"", :pattern "[(dim :time (fn* [p1__3558#] (not (:latent p1__3558#)))) #\",\" (dim :time (fn* [p1__3559#] (not (:latent p1__3559#))))]", :production "(intersect %1 %3)"}
 #clj-duckling.engine/rule {:name "on <date>", :pattern "[#\"(?i)den|på\" (dim :time)]", :production "%2"}
 #clj-duckling.engine/rule {:name "on a named-day", :pattern "[#\"(?i)på en\" {:form :day-of-week}]", :production "%2"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)mandag|man\\.?\"", :production "(day-of-week 1)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)tirsdag|tirs?\\.?\"", :production "(day-of-week 2)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)onsdag|ons\\.?\"", :production "(day-of-week 3)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)torsdag|tors?\\.?\"", :production "(day-of-week 4)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)fredag|fre\\.?\"", :production "(day-of-week 5)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)lørdag|lør\\.?\"", :production "(day-of-week 6)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)søndag|søn\\.?\"", :production "(day-of-week 7)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)januar|jan\\.?\"", :production "(month 1)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)februar|feb\\.?\"", :production "(month 2)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)marts|mar\\.?\"", :production "(month 3)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)april|apr\\.?\"", :production "(month 4)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)maj\"", :production "(month 5)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)juni|jun\\.?\"", :production "(month 6)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)juli|jul\\.?\"", :production "(month 7)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)august|aug\\.?\"", :production "(month 8)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)september|sept?\\.?\"", :production "(month 9)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)oktober|okt\\.?\"", :production "(month 10)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)november|nov\\.?\"", :production "(month 11)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)december|dec\\.?\"", :production "(month 12)"}
 #clj-duckling.engine/rule {:name "christmas", :pattern "#\"(?i)((1\\.?)|første)? ?juledag\"", :production "(month-day 12 25)"}
 #clj-duckling.engine/rule {:name "christmas eve", :pattern "#\"(?i)juleaften(sdag)?\"", :production "(month-day 12 24)"}
 #clj-duckling.engine/rule {:name "new year's eve", :pattern "#\"(?i)nytårsaften(sdag)?\"", :production "(month-day 12 31)"}
 #clj-duckling.engine/rule {:name "new year's day", :pattern "#\"(?i)nytårsdag\"", :production "(month-day 1 1)"}
 #clj-duckling.engine/rule {:name "valentine's day", :pattern "#\"(?i)valentine'?s?( dag)?\"", :production "(month-day 2 14)"}
 #clj-duckling.engine/rule {:name "constitution day", :pattern "#\"(?i)grundlov'?s?'? dag\"", :production "(month-day 6 5)"}
 #clj-duckling.engine/rule {:name "Father's Day", :pattern "#\"(?i)far'?s?'? dag\"", :production "(month-day 6 5)"}
 #clj-duckling.engine/rule {:name "Mother's Day", :pattern "#\"(?i)mor'?s? dag\"", :production "(intersect (day-of-week 7) (month 5) (cycle-nth-after :week 1 (month-day 5 1)))"}
 #clj-duckling.engine/rule {:name "halloween day", :pattern "#\"(?i)hall?owe?en\"", :production "(month-day 10 31)"}
 #clj-duckling.engine/rule {:name "absorption of , after named day", :pattern "[{:form :day-of-week} #\",\"]", :production "%1"}
 #clj-duckling.engine/rule {:name "now", :pattern "#\"(?i)lige nu|nu|(i )?dette øjeblik\"", :production "(cycle-nth :second 0)"}
 #clj-duckling.engine/rule {:name "today", :pattern "#\"(?i)i dag|idag\"", :production "(cycle-nth :day 0)"}
 #clj-duckling.engine/rule {:name "tomorrow", :pattern "#\"(?i)i morgen|imorgen\"", :production "(cycle-nth :day 1)"}
 #clj-duckling.engine/rule {:name "the day after tomorrow", :pattern "#\"(?i)i overmorgen\"", :production "(cycle-nth :day 2)"}
 #clj-duckling.engine/rule {:name "yesterday", :pattern "#\"(?i)i går|igår\"", :production "(cycle-nth :day -1)"}
 #clj-duckling.engine/rule {:name "the day before yesterday", :pattern "#\"(?i)i forgårs\"", :production "(cycle-nth :day -2)"}
 #clj-duckling.engine/rule {:name "EOM|End of month", :pattern "#\"(?i)EOM\"", :production "(cycle-nth :month 1)"}
 #clj-duckling.engine/rule {:name "EOY|End of year", :pattern "#\"(?i)EOY\"", :production "(cycle-nth :year 1)"}
 #clj-duckling.engine/rule {:name "this|next <day-of-week>", :pattern "[#\"(?i)(kommende|næste)\" {:form :day-of-week}]", :production "(pred-nth-not-immediate %2 0)"}
 #clj-duckling.engine/rule {:name "this <time>", :pattern "[#\"(?i)(denne|dette|i|den her)\" (dim :time)]", :production "(pred-nth %2 0)"}
 #clj-duckling.engine/rule {:name "next <time>", :pattern "[#\"(?i)næste|kommende\" (dim :time (fn* [p1__3560#] (not (:latent p1__3560#))))]", :production "(pred-nth-not-immediate %2 0)"}
 #clj-duckling.engine/rule {:name "last <time>", :pattern "[#\"(?i)(sidste|seneste)\" (dim :time)]", :production "(pred-nth %2 -1)"}
 #clj-duckling.engine/rule {:name "<time> after next", :pattern "[#\"(?i)næste\" (dim :time) #\"(?i)igen\"]", :production "(pred-nth-not-immediate %2 1)"}
 #clj-duckling.engine/rule {:name "<time> before last", :pattern "[#\"(?i)sidste\" (dim :time) #\"(?i)igen\"]", :production "(pred-nth %2 -2)"}
 #clj-duckling.engine/rule {:name "last <day-of-week> of <time>", :pattern "[#\"(?i)sidste\" {:form :day-of-week} #\"(?i)af|i\" (dim :time)]", :production "(pred-last-of %2 %4)"}
 #clj-duckling.engine/rule {:name "last <cycle> of <time>", :pattern "[#\"(?i)sidste\" (dim :cycle) #\"(?i)af|i\" (dim :time)]", :production "(cycle-last-of %2 %4)"}
 #clj-duckling.engine/rule {:name "nth <time> of <time>", :pattern "[(dim :ordinal) (dim :time) #\"(?i)af|i\" (dim :time)]", :production "(pred-nth (intersect %4 %2) (dec (:value %1)))"}
 #clj-duckling.engine/rule {:name "nth <time> of <time>", :pattern "[#\"(?i)den\" (dim :ordinal) (dim :time) #\"(?i)af|i\" (dim :time)]", :production "(pred-nth (intersect %5 %3) (dec (:value %2)))"}
 #clj-duckling.engine/rule {:name "nth <time> after <time>", :pattern "[(dim :ordinal) (dim :time) #\"(?i)efter\" (dim :time)]", :production "(pred-nth-after %2 %4 (dec (:value %1)))"}
 #clj-duckling.engine/rule {:name "nth <time> after <time>", :pattern "[#\"(?i)den\" (dim :ordinal) (dim :time) #\"(?i)efter\" (dim :time)]", :production "(pred-nth-after %3 %5 (dec (:value %2)))"}
 #clj-duckling.engine/rule {:name "year", :pattern "(integer 1000 2100)", :production "(year (:value %1))"}
 #clj-duckling.engine/rule {:name "year (latent)", :pattern "(integer -10000 999)", :production "(assoc (year (:value %1)) :latent true)"}
 #clj-duckling.engine/rule {:name "year (latent)", :pattern "(integer 2101 10000)", :production "(assoc (year (:value %1)) :latent true)"}
 #clj-duckling.engine/rule {:name "the <day-of-month> (ordinal)", :pattern "[#\"(?i)den\" (dim :ordinal (fn* [p1__3561#] (<= 1 (:value p1__3561#) 31)))]", :production "(day-of-month (:value %2))"}
 #clj-duckling.engine/rule {:name "<day-of-month> (ordinal)", :pattern "[(dim :ordinal (fn* [p1__3562#] (<= 1 (:value p1__3562#) 31)))]", :production "(assoc (day-of-month (:value %1)) :latent true)"}
 #clj-duckling.engine/rule {:name "the <day-of-month> (non ordinal)", :pattern "[#\"(?i)den\" (integer 1 31)]", :production "(assoc (day-of-month (:value %2)) :latent true)"}
 #clj-duckling.engine/rule {:name "<named-month> <day-of-month> (ordinal)", :pattern "[{:form :month} (dim :ordinal (fn* [p1__3563#] (<= 1 (:value p1__3563#) 31)))]", :production "(intersect %1 (day-of-month (:value %2)))"}
 #clj-duckling.engine/rule {:name "<named-month> <day-of-month> (non ordinal)", :pattern "[{:form :month} (integer 1 31)]", :production "(intersect %1 (day-of-month (:value %2)))"}
 #clj-duckling.engine/rule {:name "<day-of-month> (ordinal) of <named-month>", :pattern "[(dim :ordinal (fn* [p1__3564#] (<= 1 (:value p1__3564#) 31))) #\"(?i)af|i\" {:form :month}]", :production "(intersect %3 (day-of-month (:value %1)))"}
 #clj-duckling.engine/rule {:name "<day-of-month> (non ordinal) of <named-month>", :pattern "[(integer 1 31) #\"(?i)af|i\" {:form :month}]", :production "(intersect %3 (day-of-month (:value %1)))"}
 #clj-duckling.engine/rule {:name "<day-of-month> (non ordinal) <named-month>", :pattern "[(integer 1 31) {:form :month}]", :production "(intersect %2 (day-of-month (:value %1)))"}
 #clj-duckling.engine/rule {:name "<day-of-month>(ordinal) <named-month>", :pattern "[(dim :ordinal (fn* [p1__3565#] (<= 1 (:value p1__3565#) 31))) {:form :month}]", :production "(intersect %2 (day-of-month (:value %1)))"}
 #clj-duckling.engine/rule {:name "<day-of-month>(ordinal) <named-month> year", :pattern "[(dim :ordinal (fn* [p1__3566#] (<= 1 (:value p1__3566#) 31))) {:form :month} #\"(\\d{2,4})\"]", :production "(intersect %2 (day-of-month (:value %1)) (year (Integer/parseInt (first (:groups %3)))))"}
 #clj-duckling.engine/rule {:name "the ides of <named-month>", :pattern "[#\"(?i)midten af\" {:form :month}]", :production "(intersect %2 (day-of-month (if (#{7 3 5 10} (:month %2)) 15 13)))"}
 #clj-duckling.engine/rule {:name "time-of-day (latent)", :pattern "(integer 0 23)", :production "(assoc (hour (:value %1) false) :latent true)"}
 #clj-duckling.engine/rule {:name "<time-of-day> o'clock", :pattern "[(fn* [p1__3567#] (:full-hour p1__3567#)) #\"(?i)h\"]", :production "(dissoc %1 :latent)"}
 #clj-duckling.engine/rule {:name "at <time-of-day>", :pattern "[#\"(?i)klokken|kl.|@\" {:form :time-of-day}]", :production "(dissoc %2 :latent)"}
 #clj-duckling.engine/rule {:name "hh:mm", :pattern "#\"(?i)((?:[01]?\\d)|(?:2[0-3]))[:.]([0-5]\\d)\"", :production "(hour-minute (Integer/parseInt (first (:groups %1))) (Integer/parseInt (second (:groups %1))) false)"}
 #clj-duckling.engine/rule {:name "hh:mm:ss", :pattern "#\"(?i)((?:[01]?\\d)|(?:2[0-3]))[:.]([0-5]\\d)[:.]([0-5]\\d)\"", :production "(hour-minute-second (Integer/parseInt (first (:groups %1))) (Integer/parseInt (second (:groups %1))) (Integer/parseInt (second (next (:groups %1)))) false)"}
 #clj-duckling.engine/rule {:name "noon", :pattern "#\"(?i)middag|(kl(\\.|okken)?)? tolv\"", :production "(hour 12 false)"}
 #clj-duckling.engine/rule {:name "midnight|EOD|end of day", :pattern "#\"(?i)midnat|EOD\"", :production "(hour 0 false)"}
 #clj-duckling.engine/rule {:name "quarter (relative minutes)", :pattern "#\"(?i)(et|ét)? ?kvart(er)?\"", :production "{:relative-minutes 15}"}
 #clj-duckling.engine/rule {:name "half (relative minutes)", :pattern "#\"halv time\"", :production "{:relative-minutes 30}"}
 #clj-duckling.engine/rule {:name "number (as relative minutes)", :pattern "(integer 1 59)", :production "{:relative-minutes (:value %1)}"}
 #clj-duckling.engine/rule {:name "<hour-of-day> <integer> (as relative minutes)", :pattern "[(dim :time :full-hour) (fn* [p1__3568#] (:relative-minutes p1__3568#))]", :production "(hour-relativemin (:full-hour %1) (:relative-minutes %2) true)"}
 #clj-duckling.engine/rule {:name "relative minutes to|till|before <integer> (hour-of-day)", :pattern "[(fn* [p1__3569#] (:relative-minutes p1__3569#)) #\"(?i)i\" (dim :time :full-hour)]", :production "(hour-relativemin (:full-hour %3) (- (:relative-minutes %1)) true)"}
 #clj-duckling.engine/rule {:name "relative minutes after|past <integer> (hour-of-day)", :pattern "[(fn* [p1__3570#] (:relative-minutes p1__3570#)) #\"(?i)over\" (dim :time :full-hour)]", :production "(hour-relativemin (:full-hour %3) (:relative-minutes %1) true)"}
 #clj-duckling.engine/rule {:name "dd/mm/yyyy", :pattern "#\"(3[01]|[12]\\d|0?[1-9])[\\/-](0?[1-9]|1[0-2])[\\/-](\\d{2,4})\"", :production "(parse-dmy (first (:groups %1)) (second (:groups %1)) (nth (:groups %1) 2) true)"}
 #clj-duckling.engine/rule {:name "yyyy-mm-dd", :pattern "#\"(\\d{2,4})-(0?[1-9]|1[0-2])-(3[01]|[12]\\d|0?[1-9])\"", :production "(parse-dmy (nth (:groups %1) 2) (second (:groups %1)) (first (:groups %1)) true)"}
 #clj-duckling.engine/rule {:name "dd/mm", :pattern "#\"(3[01]|[12]\\d|0?[1-9])[\\/-](0?[1-9]|1[0-2])\"", :production "(parse-dmy (first (:groups %1)) (second (:groups %1)) nil true)"}
 #clj-duckling.engine/rule {:name "morning", :pattern "[#\"(?i)morgen(en)?\"]", :production "(assoc (interval (hour 4 false) (hour 12 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "afternoon", :pattern "[#\"(?i)eftermiddag(en)?\"]", :production "(assoc (interval (hour 12 false) (hour 19 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "evening", :pattern "[#\"(?i)afte(s|n(en)?)\"]", :production "(assoc (interval (hour 18 false) (hour 0 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "night", :pattern "[#\"(?i)nat(ten)?\"]", :production "(assoc (interval (hour 0 false) (hour 4 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "lunch", :pattern "[#\"(?i)(til )?middag\"]", :production "(assoc (interval (hour 12 false) (hour 14 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "in|during the <part-of-day>", :pattern "[#\"(?i)om|i\" {:form :part-of-day}]", :production "(dissoc %2 :latent)"}
 #clj-duckling.engine/rule {:name "in|during the <part-of-day>", :pattern "[#\"(?i)om|i\" {:form :part-of-day} #\"(?i)en|ten\"]", :production "(dissoc %2 :latent)"}
 #clj-duckling.engine/rule {:name "this <part-of-day>", :pattern "[#\"(?i)i|denne\" {:form :part-of-day}]", :production "(assoc (intersect (cycle-nth :day 0) %2) :form :part-of-day)"}
 #clj-duckling.engine/rule {:name "tonight", :pattern "#\"(?i)i aften\"", :production "(assoc (intersect (cycle-nth :day 0) (interval (hour 18 false) (hour 0 false) false)) :form :part-of-day)"}
 #clj-duckling.engine/rule {:name "after lunch", :pattern "#\"(?i)efter (frokost|middag)\"", :production "(assoc (intersect (cycle-nth :day 0) (interval (hour 13 false) (hour 17 false) false)) :form :part-of-day)"}
 #clj-duckling.engine/rule {:name "after work", :pattern "#\"(?i)efter arbejde\"", :production "(assoc (intersect (cycle-nth :day 0) (interval (hour 17 false) (hour 21 false) false)) :form :part-of-day)"}
 #clj-duckling.engine/rule {:name "<time> <part-of-day>", :pattern "[(dim :time) {:form :part-of-day}]", :production "(intersect %2 %1)"}
 #clj-duckling.engine/rule {:name "<part-of-day> of <time>", :pattern "[{:form :part-of-day} #\"(?i)(en |ten )?den\" (dim :time)]", :production "(intersect %1 %3)"}
 #clj-duckling.engine/rule {:name "week-end", :pattern "#\"(?i)(week(\\s|-)?end)(en)?\"", :production "(interval (intersect (day-of-week 5) (hour 18 false)) (intersect (day-of-week 1) (hour 0 false)) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"(?i)sommer\"", :production "(interval (month-day 6 21) (month-day 9 23) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"(?i)efterår\"", :production "(interval (month-day 9 23) (month-day 12 21) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"(?i)vinter\"", :production "(interval (month-day 12 21) (month-day 3 20) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"(?i)forår\"", :production "(interval (month-day 3 20) (month-day 6 21) false)"}
 #clj-duckling.engine/rule {:name "timezone", :pattern "#\"(?i)\\b(YEKT|YEKST|YAPT|YAKT|YAKST|WT|WST|WITA|WIT|WIB|WGT|WGST|WFT|WEZ|WET|WESZ|WEST|WAT|WAST|VUT|VLAT|VLAST|VET|UZT|UYT|UYST|UTC|ULAT|TVT|TMT|TLT|TKT|TJT|TFT|TAHT|SST|SRT|SGT|SCT|SBT|SAST|SAMT|RET|PYT|PYST|PWT|PT|PST|PONT|PMST|PMDT|PKT|PHT|PHOT|PGT|PETT|PETST|PET|PDT|OMST|OMSST|NZST|NZDT|NUT|NST|NPT|NOVT|NOVST|NFT|NDT|NCT|MYT|MVT|MUT|MST|MSK|MSD|MMT|MHT|MEZ|MESZ|MDT|MAWT|MART|MAGT|MAGST|LINT|LHST|LHDT|KUYT|KST|KRAT|KRAST|KGT|JST|IST|IRST|IRKT|IRKST|IRDT|IOT|IDT|ICT|HOVT|HNY|HNT|HNR|HNP|HNE|HNC|HNA|HLV|HKT|HAY|HAT|HAST|HAR|HAP|HAE|HADT|HAC|HAA|GYT|GST|GMT|GILT|GFT|GET|GAMT|GALT|FNT|FKT|FKST|FJT|FJST|ET|EST|EGT|EGST|EET|EEST|EDT|ECT|EAT|EAST|EASST|DAVT|ChST|CXT|CVT|CST|COT|CLT|CLST|CKT|CHAST|CHADT|CET|CEST|CDT|CCT|CAT|CAST|BTT|BST|BRT|BRST|BOT|BNT|AZT|AZST|AZOT|AZOST|AWST|AWDT|AST|ART|AQTT|ANAT|ANAST|AMT|AMST|ALMT|AKST|AKDT|AFT|AEST|AEDT|ADT|ACST|ACDT)\\b\"", :production "{:dim :timezone, :value (-> %1 :groups first .toUpperCase)}"}
 #clj-duckling.engine/rule {:name "<time> timezone", :pattern "[(dim :time) (dim :timezone)]", :production "(set-timezone %1 (:value %2))"}
 #clj-duckling.engine/rule {:name "<time-of-day> approximately", :pattern "[{:form :time-of-day} #\"(?i)(cirka|ca\\.|-?ish)\"]", :production "(-> %1 (dissoc :latent) (merge {:precision \"approximate\"}))"}
 #clj-duckling.engine/rule {:name "<time-of-day> sharp", :pattern "[{:form :time-of-day} #\"(?i)(sharp|præcis)\"]", :production "(-> %1 (dissoc :latent) (merge {:precision \"exact\"}))"}
 #clj-duckling.engine/rule {:name "about <time-of-day>", :pattern "[#\"(?i)(omkring|cirka|ca\\.)( kl\\.| klokken)?\" {:form :time-of-day}]", :production "(-> %2 (dissoc :latent) (merge {:precision \"approximate\"}))"}
 #clj-duckling.engine/rule {:name "exactly <time-of-day>", :pattern "[#\"(?i)præcis( kl.| klokken)?\" {:form :time-of-day}]", :production "(-> %2 (dissoc :latent) (merge {:precision \"exact\"}))"}
 #clj-duckling.engine/rule {:name "<month> dd-dd (interval)", :pattern "[#\"([012]?\\d|30|31)(ter|\\.)?\" #\"\\-|til\" #\"([012]?\\d|30|31)(ter|\\.)?\" {:form :month}]", :production "(interval (intersect %4 (day-of-month (Integer/parseInt (-> %1 :groups first)))) (intersect %4 (day-of-month (Integer/parseInt (-> %3 :groups first)))) true)"}
 #clj-duckling.engine/rule {:name "<datetime> - <datetime> (interval)", :pattern "[(dim :time (fn* [p1__3571#] (not (:latent p1__3571#)))) #\"\\-|til|indtil\" (dim :time (fn* [p1__3572#] (not (:latent p1__3572#))))]", :production "(interval %1 %3 true)"}
 #clj-duckling.engine/rule {:name "from <datetime> - <datetime> (interval)", :pattern "[#\"(?i)fra\" (dim :time) #\"\\-|til|indtil\" (dim :time)]", :production "(interval %2 %4 true)"}
 #clj-duckling.engine/rule {:name "between <datetime> and <datetime> (interval)", :pattern "[#\"(?i)mellem\" (dim :time) #\"og\" (dim :time)]", :production "(interval %2 %4 true)"}
 #clj-duckling.engine/rule {:name "<time-of-day> - <time-of-day> (interval)", :pattern "[(fn* [p1__3573#] (and (= :time-of-day (:form p1__3573#)) (not (:latent p1__3573#)))) #\"\\-|til|indtil\" {:form :time-of-day}]", :production "(interval %1 %3 true)"}
 #clj-duckling.engine/rule {:name "from <time-of-day> - <time-of-day> (interval)", :pattern "[#\"(?i)(efter|fra)\" {:form :time-of-day} #\"((men )?før)|\\-|til|indtil\" {:form :time-of-day}]", :production "(interval %2 %4 true)"}
 #clj-duckling.engine/rule {:name "between <time-of-day> and <time-of-day> (interval)", :pattern "[#\"(?i)mellem\" {:form :time-of-day} #\"og\" {:form :time-of-day}]", :production "(interval %2 %4 true)"}
 #clj-duckling.engine/rule {:name "within <duration>", :pattern "[#\"(?i)indenfor\" (dim :duration)]", :production "(interval (cycle-nth :second 0) (in-duration (:value %2)) false)"}
 #clj-duckling.engine/rule {:name "by the end of <time>", :pattern "[#\"(?i)i slutningen af\" (dim :time)]", :production "(interval (cycle-nth :second 0) %2 true)"}
 #clj-duckling.engine/rule {:name "until <time-of-day>", :pattern "[#\"(?i)(engang )?inden|indtil|før|op til\" (dim :time)]", :production "(merge %2 {:direction :before})"}
 #clj-duckling.engine/rule {:name "after <time-of-day>", :pattern "[#\"(?i)(engang )?efter\" (dim :time)]", :production "(merge %2 {:direction :after})"}]