[#clj-duckling.engine/rule {:name "second (unit-of-duration)", :pattern "#\"(?i)sek(unde)?n?\"", :production "{:dim :unit-of-duration, :grain :second}"}
 #clj-duckling.engine/rule {:name "minute (unit-of-duration)", :pattern "#\"(?i)min(ute)?n?\"", :production "{:dim :unit-of-duration, :grain :minute}"}
 #clj-duckling.engine/rule {:name "hour (unit-of-duration)", :pattern "#\"(?i)stunden?\"", :production "{:dim :unit-of-duration, :grain :hour}"}
 #clj-duckling.engine/rule {:name "day (unit-of-duration)", :pattern "#\"(?i)tage?n?\"", :production "{:dim :unit-of-duration, :grain :day}"}
 #clj-duckling.engine/rule {:name "week (unit-of-duration)", :pattern "#\"(?i)wochen?\"", :production "{:dim :unit-of-duration, :grain :week}"}
 #clj-duckling.engine/rule {:name "month (unit-of-duration)", :pattern "#\"(?i)monate?n?\"", :production "{:dim :unit-of-duration, :grain :month}"}
 #clj-duckling.engine/rule {:name "year (unit-of-duration)", :pattern "#\"(?i)jahre?n?\"", :production "{:dim :unit-of-duration, :grain :year}"}
 #clj-duckling.engine/rule {:name "half an hour", :pattern "[#\"(?i)(1/2\\s?|(einer )halbe?n? )stunde\"]", :production "{:dim :duration, :value (duration :minute 30)}"}
 #clj-duckling.engine/rule {:name "fortnight", :pattern "#\"(?i)(a|one)? fortnight\"", :production "{:dim :duration, :value (duration :day 14)}"}
 #clj-duckling.engine/rule {:name "a <duration>", :pattern "[#\"(?i)(in )?eine?(r|n)?\" (dim :duration)]", :production "(in-duration (:value %2))"}
 #clj-duckling.engine/rule {:name "<integer> <unit-of-duration>", :pattern "[(integer 0) (dim :unit-of-duration)]", :production "{:dim :duration, :value (duration (:grain %2) (:value %1))}"}
 #clj-duckling.engine/rule {:name "<integer> more <unit-of-duration>", :pattern "[(integer 0) #\"(?i)mehr|weniger\" (dim :unit-of-duration)]", :production "{:dim :duration, :value (duration (:grain %3) (:value %1))}"}
 #clj-duckling.engine/rule {:name "number.number hours", :pattern "[#\"(\\d+)\\.(\\d+)\" #\"(?i)stunden?\"]", :production "{:dim :duration, :value (duration :minute (int (+ (quot (* 6 (Long/parseLong (second (:groups %1)))) (java.lang.Math/pow 10 (- (count (second (:groups %1))) 1))) (* 60 (Long/parseLong (first (:groups %1)))))))}"}
 #clj-duckling.engine/rule {:name "<integer> and an half hours", :pattern "[(integer 0) #\"(?i)ein ?halb stunden?\"]", :production "{:dim :duration, :value (duration :minute (+ 30 (* 60 (:value %1))))}"}
 #clj-duckling.engine/rule {:name "a <unit-of-duration>", :pattern "[#\"(?i)eine?(r|n)?\" (dim :unit-of-duration)]", :production "{:dim :duration, :value (duration (:grain %2) 1)}"}
 #clj-duckling.engine/rule {:name "in <duration>", :pattern "[#\"(?i)in\" (dim :duration)]", :production "(in-duration (:value %2))"}
 #clj-duckling.engine/rule {:name "after <duration>", :pattern "[#\"(?i)nach\" (dim :duration)]", :production "(in-duration (:value %2))"}
 #clj-duckling.engine/rule {:name "<duration> from now", :pattern "[(dim :duration) #\"(?i)ab (heute|jetzt)\"]", :production "(in-duration (:value %1))"}
 #clj-duckling.engine/rule {:name "<duration> ago", :pattern "[#\"(?i)vor\" (dim :duration)]", :production "(duration-ago (:value %2))"}
 #clj-duckling.engine/rule {:name "<duration> hence", :pattern "[(dim :duration) #\"(?i)hence\"]", :production "(in-duration (:value %1))"}
 #clj-duckling.engine/rule {:name "<duration> after <time>", :pattern "[(dim :duration) #\"(?i)nach\" (dim :time)]", :production "(duration-after (:value %1) %3)"}
 #clj-duckling.engine/rule {:name "<duration> before <time>", :pattern "[(dim :duration) #\"(?i)vor\" (dim :time)]", :production "(duration-before (:value %1) %3)"}
 #clj-duckling.engine/rule {:name "about <duration>", :pattern "[#\"(?i)ungefÃ¤hr|zirka\" (dim :duration)]", :production "(-> %2 (merge {:precision \"approximate\"}))"}
 #clj-duckling.engine/rule {:name "exactly <duration>", :pattern "[#\"(?i)genau|exakt\" (dim :duration)]", :production "(-> %2 (merge {:precision \"exact\"}))"}]