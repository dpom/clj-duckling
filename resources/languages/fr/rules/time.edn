[#clj-duckling.engine/rule {:name "intersect", :pattern "[(dim :time (fn* [p1__3555#] (not (:latent p1__3555#)))) (dim :time (fn* [p1__3556#] (not (:latent p1__3556#))))]", :production "(intersect %1 %2)"}
 #clj-duckling.engine/rule {:name "intersect by 'de' or ','", :pattern "[(dim :time (fn* [p1__3557#] (not (:latent p1__3557#)))) #\"(?i)de|,\" (dim :time (fn* [p1__3558#] (not (:latent p1__3558#))))]", :production "(intersect %1 %3)"}
 #clj-duckling.engine/rule {:name "intersect by 'mais/par exemple/plutôt'", :pattern "[(dim :time (fn* [p1__3559#] (not (:latent p1__3559#)))) #\"(?i)mais|par exemple|plutôt\" (dim :time (fn* [p1__3560#] (not (:latent p1__3560#))))]", :production "(intersect %1 %3)"}
 #clj-duckling.engine/rule {:name "en <named-month>", :pattern "[#\"(?i)en|au mois de?'?\" {:form :month}]", :production "%2"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)lun\\.?(di)?\"", :production "(day-of-week 1)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)mar\\.?(di)?\"", :production "(day-of-week 2)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)mer\\.?(credi)?\"", :production "(day-of-week 3)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)jeu\\.?(di)?\"", :production "(day-of-week 4)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)ven\\.?(dredi)?\"", :production "(day-of-week 5)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)sam\\.?(edi)?\"", :production "(day-of-week 6)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)dim\\.?(anche)?\"", :production "(day-of-week 7)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)janvier|janv\\.?\"", :production "(month 1)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)fevrier|février|fev|fév\\.?\"", :production "(month 2)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)mars|mar\\.?\"", :production "(month 3)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)avril|avr\\.?\"", :production "(month 4)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)mai\"", :production "(month 5)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)juin|jun\\.?\"", :production "(month 6)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)juillet|juil?\\.\"", :production "(month 7)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)aout|août|aou\\.?\"", :production "(month 8)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)septembre|sept?\\.?\"", :production "(month 9)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)octobre|oct\\.?\"", :production "(month 10)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)novembre|nov\\.?\"", :production "(month 11)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)décembre|decembre|déc\\.?|dec\\.?\"", :production "(month 12)"}
 #clj-duckling.engine/rule {:name "noel", :pattern "#\"(?i)(jour de )?no[eë]l\"", :production "(month-day 12 25)"}
 #clj-duckling.engine/rule {:name "soir de noël", :pattern "#\"(?i)soir(ée)? de no[eë]l\"", :production "(interval (intersect (month-day 12 24) (hour 18)) (intersect (month-day 12 25) (hour 0)) false)"}
 #clj-duckling.engine/rule {:name "jour de l'an", :pattern "#\"(?i)(jour de l'|nouvel )an\"", :production "(month-day 1 1)"}
 #clj-duckling.engine/rule {:name "toussaint", :pattern "#\"(?i)((la |la journée de la |jour de la )?toussaint|jour des morts)\"", :production "(month-day 11 1)"}
 #clj-duckling.engine/rule {:name "1er mai", :pattern "#\"(?i)f(e|ê)te du travail\"", :production "(month-day 5 1)"}
 #clj-duckling.engine/rule {:name "maintenant", :pattern "#\"maintenant|(tout de suite)\"", :production "(cycle-nth :second 0)"}
 #clj-duckling.engine/rule {:name "aujourd'hui", :pattern "#\"(?i)(aujourd'? ?hui)|(ce jour)|(dans la journ[ée]e?)|(en ce moment)\"", :production "(cycle-nth :day 0)"}
 #clj-duckling.engine/rule {:name "demain", :pattern "#\"(?i)(demain)|(le lendemain)\"", :production "(cycle-nth :day 1)"}
 #clj-duckling.engine/rule {:name "hier", :pattern "#\"(?i)hier|la veille\"", :production "(cycle-nth :day -1)"}
 #clj-duckling.engine/rule {:name "fin du mois", :pattern "#\"(?i)(([aà] )?la )?fin (du|de) mois\"", :production "(assoc (interval (cycle-nth-after :day -10 (cycle-nth :month 1)) (cycle-nth :month 1) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "après-demain", :pattern "#\"(?i)apr(e|è)s[- ]?demain\"", :production "(cycle-nth :day 2)"}
 #clj-duckling.engine/rule {:name "avant-hier", :pattern "#\"(?i)avant[- ]?hier\"", :production "(cycle-nth :day -2)"}
 #clj-duckling.engine/rule {:name "ce <day-of-week>", :pattern "[#\"(?i)ce\" {:form :day-of-week}]", :production "(pred-nth-not-immediate %2 0)"}
 #clj-duckling.engine/rule {:name "ce <time>", :pattern "[#\"(?i)ce\" (dim :time)]", :production "(pred-nth %2 0)"}
 #clj-duckling.engine/rule {:name "<day-of-week> prochain", :pattern "[{:form :day-of-week} #\"(?i)prochain\"]", :production "(pred-nth-not-immediate %1 0)"}
 #clj-duckling.engine/rule {:name "<named-month> prochain", :pattern "[(dim :time) #\"(?i)prochain\"]", :production "(pred-nth %1 1)"}
 #clj-duckling.engine/rule {:name "<named-month|named-day> suivant|d'après", :pattern "[(dim :time) #\"(?i)suivante?s?|d'apr[eéè]s\"]", :production "(pred-nth %1 1)"}
 #clj-duckling.engine/rule {:name "<named-month|named-day> dernier|passé", :pattern "[(dim :time) #\"(?i)derni[eéè]re?|pass[ée]e?\"]", :production "(pred-nth %1 -1)"}
 #clj-duckling.engine/rule {:name "<named-day> en huit", :pattern "[{:form :day-of-week} #\"(?i)en (huit|8)\"]", :production "(pred-nth %1 1)"}
 #clj-duckling.engine/rule {:name "<named-day> en quinze", :pattern "[{:form :day-of-week} #\"(?i)en (quinze|15)\"]", :production "(pred-nth %1 2)"}
 #clj-duckling.engine/rule {:name "dernier <day-of-week> de <time> (latent)", :pattern "[#\"(?i)derni[eéè]re?\" {:form :day-of-week} #\"(?i)d['e]\" (dim :time)]", :production "(pred-last-of %2 %4)"}
 #clj-duckling.engine/rule {:name "dernier <cycle> de <time> (latent)", :pattern "[#\"(?i)derni[eéè]re?\" (dim :cycle) #\"(?i)d['e]\" (dim :time)]", :production "(cycle-last-of %2 %4)"}
 #clj-duckling.engine/rule {:name "<ordinal> week-end de <time>", :pattern "[(dim :ordinal) #\"week(\\s|-)?end (d['eu]|en|du mois de)\" {:form :month}]", :production "(pred-nth (intersect %3 (interval (intersect (day-of-week 5) (hour 18 false)) (intersect (day-of-week 1) (hour 0 false)) false)) (dec (:value %1)))"}
 #clj-duckling.engine/rule {:name "dernier week-end de <time>", :pattern "[#\"(?i)dernier week(\\s|-)?end (d['eu]|en|du mois de)\" {:form :month}]", :production "(pred-last-of (interval (intersect (day-of-week 5) (hour 18 false)) (intersect (day-of-week 1) (hour 0 false)) false) %2)"}
 #clj-duckling.engine/rule {:name "year", :pattern "(integer 1000 2100)", :production "(year (:value %1))"}
 #clj-duckling.engine/rule {:name "year (latent)", :pattern "(integer -10000 999)", :production "(assoc (year (:value %1)) :latent true)"}
 #clj-duckling.engine/rule {:name "year (latent)", :pattern "(integer 2101 10000)", :production "(assoc (year (:value %1)) :latent true)"}
 #clj-duckling.engine/rule {:name "day of month (premier)", :pattern "[#\"(?i)premier|prem\\.?|1er|1 er\"]", :production "(day-of-month 1)"}
 #clj-duckling.engine/rule {:name "le <day-of-month> (non ordinal)", :pattern "[#\"(?i)le\" (integer 1 31)]", :production "(day-of-month (:value %2))"}
 #clj-duckling.engine/rule {:name "le <day-of-month> à <datetime>", :pattern "[#\"(?i)le\" (integer 1 31) #\"(?i)[aà]\" (dim :time)]", :production "(intersect (day-of-month (:value %2)) %4)"}
 #clj-duckling.engine/rule {:name "<day-of-month> <named-month>", :pattern "[(integer 1 31) {:form :month}]", :production "(intersect %2 (day-of-month (:value %1)))"}
 #clj-duckling.engine/rule {:name "<day-of-week> <day-of-month>", :pattern "[{:form :day-of-week} (integer 1 31)]", :production "(day-of-month (:value %2))"}
 #clj-duckling.engine/rule {:name "<day-of-week> <day-of-month> à <time-of-day>)", :pattern "[{:form :day-of-week} (integer 1 31) {:form :time-of-day}]", :production "(intersect (day-of-month (:value %2)) %3)"}
 #clj-duckling.engine/rule {:name "time-of-day (latent)", :pattern "(integer 0 23)", :production "(assoc (hour (:value %1) (< (:value %1) 12)) :latent true)"}
 #clj-duckling.engine/rule {:name "midi", :pattern "#\"(?i)midi\"", :production "(hour 12 false)"}
 #clj-duckling.engine/rule {:name "minuit", :pattern "#\"(?i)minuit\"", :production "(hour 0 false)"}
 #clj-duckling.engine/rule {:name "<time-of-day> heures", :pattern "[(fn* [p1__3561#] (:full-hour p1__3561#)) #\"(?i)h\\.?(eure)?s?\"]", :production "(dissoc %1 :latent)"}
 #clj-duckling.engine/rule {:name "à|vers <time-of-day>", :pattern "[#\"(?i)(vers|autour de|[aà] environ|aux alentours de|[aà])\" {:form :time-of-day}]", :production "(dissoc %2 :latent)"}
 #clj-duckling.engine/rule {:name "hh(:|h)mm (time-of-day)", :pattern "#\"(?i)((?:[01]?\\d)|(?:2[0-3]))[:h]([0-5]\\d)\"", :production "(let [h (Integer/parseInt (first (:groups %1)))] (hour-minute h (Integer/parseInt (second (:groups %1))) (< h 12)))"}
 #clj-duckling.engine/rule {:name "hhmm (military time-of-day)", :pattern "#\"(?i)((?:[01]?\\d)|(?:2[0-3]))([0-5]\\d)\"", :production "(-> (hour-minute (Integer/parseInt (first (:groups %1))) (Integer/parseInt (second (:groups %1))) false) (assoc :latent true))"}
 #clj-duckling.engine/rule {:name "quart (relative minutes)", :pattern "#\"(?i)quart\"", :production "{:relative-minutes 15}"}
 #clj-duckling.engine/rule {:name "trois quarts (relative minutes)", :pattern "#\"(?i)(3|trois) quarts?\"", :production "{:relative-minutes 45}"}
 #clj-duckling.engine/rule {:name "demi (relative minutes)", :pattern "#\"demie?\"", :production "{:relative-minutes 30}"}
 #clj-duckling.engine/rule {:name "number (as relative minutes)", :pattern "(integer 1 59)", :production "{:relative-minutes (:value %1)}"}
 #clj-duckling.engine/rule {:name "number minutes (as relative minutes)", :pattern "[(integer 1 59) #\"(?i)min\\.?(ute)?s?\"]", :production "{:relative-minutes (:value %1)}"}
 #clj-duckling.engine/rule {:name "<hour-of-day> <integer> (as relative minutes)", :pattern "[(dim :time :full-hour) (fn* [p1__3562#] (:relative-minutes p1__3562#))]", :production "(hour-relativemin (:full-hour %1) (:relative-minutes %2) (:twelve-hour-clock? %1))"}
 #clj-duckling.engine/rule {:name "<hour-of-day> moins <integer> (as relative minutes)", :pattern "[(dim :time :full-hour) #\"moins( le)?\" (fn* [p1__3563#] (:relative-minutes p1__3563#))]", :production "(hour-relativemin (:full-hour %1) (- (:relative-minutes %3)) (:twelve-hour-clock? %1))"}
 #clj-duckling.engine/rule {:name "<hour-of-day> et|passé de <relative minutes>", :pattern "[(dim :time :full-hour) #\"et|(pass[ée]e? de)\" (fn* [p1__3564#] (:relative-minutes p1__3564#))]", :production "(hour-relativemin (:full-hour %1) (:relative-minutes %3) (:twelve-hour-clock? %1))"}
 #clj-duckling.engine/rule {:name "dd/-mm/-yyyy", :pattern "#\"(3[01]|[12]\\d|0?[1-9])[/-](1[0-2]|0?[1-9])[-/](\\d{2,4})\"", :production "(parse-dmy (first (:groups %1)) (second (:groups %1)) (nth (:groups %1) 2) true)"}
 #clj-duckling.engine/rule {:name "yyyy-mm-dd", :pattern "#\"(\\d{2,4})-(1[0-2]|0?[1-9])-(3[01]|[12]\\d|0?[1-9])\"", :production "(parse-dmy (nth (:groups %1) 2) (second (:groups %1)) (first (:groups %1)) true)"}
 #clj-duckling.engine/rule {:name "dd/-mm", :pattern "#\"(3[01]|[12]\\d|0?[1-9])[/-](1[0-2]|0?[1-9])\"", :production "(parse-dmy (first (:groups %1)) (second (:groups %1)) nil true)"}
 #clj-duckling.engine/rule {:name "dd mm yyyy", :pattern "#\"(3[01]|[12]\\d|0?[1-9]) (1[0-2]|0?[1-9]) (\\d{2,4})\"", :production "(parse-dmy (first (:groups %1)) (second (:groups %1)) (nth (:groups %1) 2) true)"}
 #clj-duckling.engine/rule {:name "dd mm", :pattern "#\"(3[01]|[12]\\d|0?[1-9]) (1[0-2]|0?[1-9])\"", :production "(parse-dmy (first (:groups %1)) (second (:groups %1)) nil true)"}
 #clj-duckling.engine/rule {:name "matin", :pattern "#\"(?i)mat(in[ée]?e?)?\"", :production "(assoc (interval (hour 4 false) (hour 12 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "début de matinée", :pattern "#\"(?i)(le matin (tr[eè]s )?t[ôo]t|(tr[eè]s )?t[ôo]t le matin|d[ée]but de matin[ée]e)\"", :production "(assoc (interval (hour 4 false) (hour 9 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "milieu de matinée", :pattern "#\"(?i)milieu de matin[ée]e\"", :production "(assoc (interval (hour 9 false) (hour 11 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "fin de matinée", :pattern "#\"(?i)fin de matin[ée]e\"", :production "(assoc (interval (hour 10 false) (hour 12 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "au déjeuner", :pattern "#\"(?i)([àa] l(')?heure du|pendant( le)?|au)? d[eéè]jeuner\"", :production "(assoc (interval (hour 12 false) (hour 14 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "après le déjeuner", :pattern "#\"(?i)apr[eè]s (le )?d[eéè]jeuner\"", :production "(assoc (intersect (cycle-nth :day 0) (interval (hour 13 false) (hour 17 false) false)) :form :part-of-day)"}
 #clj-duckling.engine/rule {:name "avant le déjeuner", :pattern "#\"(?i)avant (le )?d[eéè]jeuner\"", :production "(assoc (intersect (cycle-nth :day 0) (interval (hour 10 false) (hour 12 false) false)) :form :part-of-day)"}
 #clj-duckling.engine/rule {:name "après le travail", :pattern "#\"(?i)apr[eè]s (le )?travail\"", :production "(assoc (intersect (cycle-nth :day 0) (interval (hour 17 false) (hour 21 false) false)) :form :part-of-day)"}
 #clj-duckling.engine/rule {:name "après-midi", :pattern "#\"(?i)apr[eéè]s?[ \\-]?midi\"", :production "(assoc (interval (hour 12 false) (hour 19 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "début d'après-midi", :pattern "#\"(?i)d[ée]but d'apr[eéè]s?[ \\-]?midi\"", :production "(assoc (interval (hour 12 false) (hour 14 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "milieu d'après-midi", :pattern "#\"(?i)milieu d'apr[eéè]s?[ \\-]?midi\"", :production "(assoc (interval (hour 15 false) (hour 17 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "fin d'après-midi", :pattern "#\"(?i)fin d'apr[eéè]s?[ \\-]?midi\"", :production "(assoc (interval (hour 17 false) (hour 19 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "début de journée", :pattern "#\"(?i)d[ée]but de journ[ée]e\"", :production "(assoc (interval (hour 6 false) (hour 10 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "milieu de journée", :pattern "#\"(?i)milieu de journ[ée]e\"", :production "(assoc (interval (hour 11 false) (hour 16 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "fin de journée", :pattern "#\"(?i)fin de journ[ée]e\"", :production "(assoc (interval (hour 17 false) (hour 21 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "soir", :pattern "#\"(?i)soir[ée]?e?\"", :production "(assoc (interval (hour 18 false) (hour 0 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "début de soirée", :pattern "#\"(?i)d[ée]but de soir[ée]e?\"", :production "(assoc (interval (hour 18 false) (hour 21 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "fin de soirée", :pattern "#\"(?i)fin de soir[ée]e?\"", :production "(assoc (interval (hour 21 false) (hour 0 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "du|dans le <part-of-day>", :pattern "[#\"(?i)du|dans l[ae']? ?|au|en|l[ae' ]|dès l?[ae']? ?\" {:form :part-of-day}]", :production "(dissoc %2 :latent)"}
 #clj-duckling.engine/rule {:name "ce <part-of-day>", :pattern "[#\"(?i)cet?t?e?\" {:form :part-of-day}]", :production "(assoc (intersect (cycle-nth :day 0) %2) :form :part-of-day)"}
 #clj-duckling.engine/rule {:name "<dim time> <part-of-day>", :pattern "[(dim :time) {:form :part-of-day}]", :production "(intersect %1 %2)"}
 #clj-duckling.engine/rule {:name "<dim time> du matin", :pattern "[{:form :time-of-day} #\"(?i)((du|dans|de) )?((au|le|la) )?mat(in[ée]?e?)?\"]", :production "(intersect %1 (assoc (interval (hour 0 false) (hour 12 false) false) :form :part-of-day :latent true))"}
 #clj-duckling.engine/rule {:name "<dim time> du soir", :pattern "[{:form :time-of-day} #\"(?i)((du|dans|de) )?((au|le|la) )?soir[ée]?e?\"]", :production "(intersect %1 (assoc (interval (hour 16 false) (hour 0 false) false) :form :part-of-day :latent true))"}
 #clj-duckling.engine/rule {:name "<part-of-day> du <dim time>", :pattern "[{:form :part-of-day} #\"(?i)du\" (dim :time)]", :production "(intersect %3 %1)"}
 #clj-duckling.engine/rule {:name "week-end", :pattern "#\"(?i)week(\\s|-)?end\"", :production "(interval (intersect (day-of-week 5) (hour 18 false)) (intersect (day-of-week 1) (hour 0 false)) false)"}
 #clj-duckling.engine/rule {:name "début de semaine", :pattern "[#\"(?i)(en |au )?début de (cette |la )?semaine\"]", :production "(interval (day-of-week 1) (day-of-week 2) false)"}
 #clj-duckling.engine/rule {:name "milieu de semaine", :pattern "[#\"(?i)(en |au )?milieu de (cette |la )?semaine\"]", :production "(interval (day-of-week 3) (day-of-week 4) false)"}
 #clj-duckling.engine/rule {:name "fin de semaine", :pattern "[#\"(?i)(en |à la )?fin de (cette |la )?semaine\"]", :production "(interval (day-of-week 4) (day-of-week 7) false)"}
 #clj-duckling.engine/rule {:name "en semaine", :pattern "[#\"(?i)(pendant la |en )?semaine\"]", :production "(interval (day-of-week 1) (day-of-week 5) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"(?i)(cet )?été\"", :production "(interval (month-day 6 21) (month-day 9 23) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"(?i)(cet )?automne\"", :production "(interval (month-day 9 23) (month-day 12 21) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"(?i)(cet )?hiver\"", :production "(interval (month-day 12 21) (month-day 3 20) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"(?i)(ce )?printemps\"", :production "(interval (month-day 3 20) (month-day 6 21) false)"}
 #clj-duckling.engine/rule {:name "le <time>", :pattern "[#\"(?i)l[ea]\" (dim :time (fn* [p1__3565#] (not (:latent p1__3565#))))]", :production "%2"}
 #clj-duckling.engine/rule {:name "timezone", :pattern "#\"((?i)(YEKT|YEKST|YAPT|YAKT|YAKST|WT|WST|WITA|WIT|WIB|WGT|WGST|WFT|WEZ|WET|WESZ|WEST|WAT|WAST|VUT|VLAT|VLAST|VET|UZT|UYT|UYST|UTC|ULAT|TVT|TMT|TLT|TKT|TJT|TFT|TAHT|SST|SRT|SGT|SCT|SBT|SAST|SAMT|RET|PYT|PYST|PWT|PT|PST|PONT|PMST|PMDT|PKT|PHT|PHOT|PGT|PETT|PETST|PET|PDT|OMST|OMSST|NZST|NZDT|NUT|NST|NPT|NOVT|NOVST|NFT|NDT|NCT|MYT|MVT|MUT|MST|MSK|MSD|MMT|MHT|MEZ|MESZ|MDT|MAWT|MART|MAGT|MAGST|LINT|LHST|LHDT|KUYT|KST|KRAT|KRAST|KGT|JST|IST|IRST|IRKT|IRKST|IRDT|IOT|IDT|ICT|HOVT|HNY|HNT|HNR|HNP|HNE|HNC|HNA|HLV|HKT|HAY|HAT|HAST|HAR|HAP|HAE|HADT|HAC|HAA|GYT|GST|GMT|GILT|GFT|GET|GAMT|GALT|FNT|FKT|FKST|FJT|FJST|EST|EGT|EGST|EET|EEST|EDT|ECT|EAT|EAST|EASST|DAVT|ChST|CXT|CVT|CST|COT|CLT|CLST|CKT|CHAST|CHADT|CET|CEST|CDT|CCT|CAT|CAST|BTT|BST|BRT|BRST|BOT|BNT|AZT|AZST|AZOT|AZOST|AWST|AWDT|AST|ART|AQTT|ANAT|ANAST|AMT|AMST|ALMT|AKST|AKDT|AFT|AEST|AEDT|ADT|ACST|ACDT)|(?-i)ET)\"", :production "{:dim :timezone, :value (-> %1 :groups first clojure.string/upper-case)}"}
 #clj-duckling.engine/rule {:name "<time> timezone", :pattern "[(dim :time) (dim :timezone)]", :production "(set-timezone %1 (:value %2))"}
 #clj-duckling.engine/rule {:name "dd-dd <month>(interval)", :pattern "[#\"(3[01]|[12]\\d|0?[1-9])\" #\"\\-|au|jusqu'au\" #\"(3[01]|[12]\\d|0?[1-9])\" {:form :month}]", :production "(interval (intersect %4 (day-of-month (Integer/parseInt (-> %1 :groups first)))) (intersect %4 (day-of-month (Integer/parseInt (-> %3 :groups first)))) true)"}
 #clj-duckling.engine/rule {:name "<datetime>-dd <month>(interval)", :pattern "[{:dim :time} #\"\\-|au|jusqu'au\" #\"(3[01]|[12]\\d|0?[1-9])\" {:form :month}]", :production "(interval (intersect %4 %1) (intersect %4 (day-of-month (Integer/parseInt (-> %3 :groups first)))) true)"}
 #clj-duckling.engine/rule {:name "<datetime>-<day-of-week> dd <month>(interval)", :pattern "[{:dim :time} #\"\\-|au|jusqu'au\" {:form :day-of-week} #\"(3[01]|[12]\\d|0?[1-9])\" {:form :month}]", :production "(interval (intersect %5 %1) (intersect %5 (day-of-month (Integer/parseInt (-> %4 :groups first)))) true)"}
 #clj-duckling.engine/rule {:name "<day-of-week> 1er-<day-of-week> dd <month>(interval)", :pattern "[{:form :day-of-week} #\"premier|prem\\.?|1er|1 er\" #\"\\-|au|jusqu'au\" {:form :day-of-week} #\"(3[01]|[12]\\d|0?[1-9])\" {:form :month}]", :production "(interval (intersect %6 (day-of-month 1)) (intersect %6 (day-of-month (Integer/parseInt (-> %5 :groups first)))) true)"}
 #clj-duckling.engine/rule {:name "du dd-<day-of-week> dd <month>(interval)", :pattern "[#\"du\" #\"(3[01]|[12]\\d|0?[1-9])\" #\"\\-|au|jusqu'au\" {:form :day-of-week} #\"(3[01]|[12]\\d|0?[1-9])\" {:form :month}]", :production "(interval (intersect %6 (day-of-month (Integer/parseInt (-> %2 :groups first)))) (intersect %6 (day-of-month (Integer/parseInt (-> %5 :groups first)))) true)"}
 #clj-duckling.engine/rule {:name "du <datetime>-<day-of-week> dd <month>(interval)", :pattern "[#\"du\" {:dim :time} #\"\\-|au|jusqu'au\" {:form :day-of-week} #\"(3[01]|[12]\\d|0?[1-9])\" {:form :month}]", :production "(interval (intersect %6 %2) (intersect %6 (day-of-month (Integer/parseInt (-> %5 :groups first)))) true)"}
 #clj-duckling.engine/rule {:name "entre dd et dd <month>(interval)", :pattern "[#\"entre( le)?\" #\"(3[01]|[12]\\d|0?[1-9])\" #\"et( le)?\" #\"(3[01]|[12]\\d|0?[1-9])\" {:form :month}]", :production "(interval (intersect %5 (day-of-month (Integer/parseInt (-> %2 :groups first)))) (intersect %5 (day-of-month (Integer/parseInt (-> %4 :groups first)))) true)"}
 #clj-duckling.engine/rule {:name "du dd au dd(interval)", :pattern "[#\"du\" #\"(3[01]|[12]\\d|0?[1-9])\" #\"au|jusqu'au\" #\"(3[01]|[12]\\d|0?[1-9])\"]", :production "(interval (day-of-month (Integer/parseInt (-> %2 :groups first))) (day-of-month (Integer/parseInt (-> %4 :groups first))) true)"}
 #clj-duckling.engine/rule {:name "fin <named-month>(interval)", :pattern "[#\"fin( du mois d[e']? ?)?\" {:form :month}]", :production "(interval (intersect %2 (day-of-month 25)) (cycle-last-of {:dim :cycle, :grain :day} %2) true)"}
 #clj-duckling.engine/rule {:name "début <named-month>(interval)", :pattern "[#\"début( du mois d[e'] ?)?\" {:form :month}]", :production "(interval (intersect %2 (day-of-month 1)) (intersect %2 (day-of-month 5)) true)"}
 #clj-duckling.engine/rule {:name "première quinzaine de <named-month>(interval)", :pattern "[#\"(premi[èe]re|1 ?[èe]re) (quinzaine|15 ?aine) d[e']\" {:form :month}]", :production "(interval (intersect %2 (day-of-month 1)) (intersect %2 (day-of-month 14)) true)"}
 #clj-duckling.engine/rule {:name "deuxième quinzaine de <named-month>(interval)", :pattern "[#\"(deuxi[èe]me|2 ?[èe]me) (quinzaine|15 ?aine) d[e']\" {:form :month}]", :production "(interval (intersect %2 (day-of-month 15)) (cycle-last-of {:dim :cycle, :grain :day} %2) true)"}
 #clj-duckling.engine/rule {:name "<named-month>", :pattern "[#\"(?i)mi[- ]\" {:form :month}]", :production "(interval (intersect %2 (day-of-month 10)) (intersect %2 (day-of-month 19)) false)"}
 #clj-duckling.engine/rule {:name "<datetime> - <datetime> (interval)", :pattern "[(dim :time (fn* [p1__3566#] (not (:latent p1__3566#)))) #\"\\-|au|jusqu'(au|[aà])\" (dim :time (fn* [p1__3567#] (not (:latent p1__3567#))))]", :production "(interval %1 %3 true)"}
 #clj-duckling.engine/rule {:name "de <datetime> - <datetime> (interval)", :pattern "[#\"(?i)de|depuis|du\" (dim :time) #\"\\-|au|jusqu'(au|[aà])\" (dim :time)]", :production "(interval %2 %4 true)"}
 #clj-duckling.engine/rule {:name "entre <datetime> et <datetime> (interval)", :pattern "[#\"(?i)entre\" (dim :time) #\"et\" (dim :time)]", :production "(interval %2 %4 true)"}
 #clj-duckling.engine/rule {:name "<time-of-day> - <time-of-day> (interval)", :pattern "[{:form :time-of-day} #\"\\-|[aà]|au|jusqu'(au|[aà])\" {:form :time-of-day}]", :production "(interval %1 %3 true)"}
 #clj-duckling.engine/rule {:name "de <time-of-day> - <time-of-day> (interval)", :pattern "[#\"(?i)(midi )?de\" {:form :time-of-day} #\"\\-|[aà]|au|jusqu'(au|[aà])\" {:form :time-of-day}]", :production "(interval %2 %4 true)"}
 #clj-duckling.engine/rule {:name "entre <time-of-day> et <time-of-day> (interval)", :pattern "[#\"(?i)entre\" {:form :time-of-day} #\"et\" {:form :time-of-day}]", :production "(interval %2 %4 true)"}
 #clj-duckling.engine/rule {:name "d'ici <duration>", :pattern "[#\"(?i)d'ici|dans l('|es?)\" (dim :duration)]", :production "(interval (cycle-nth :second 0) (in-duration (:value %2)) false)"}
 #clj-duckling.engine/rule {:name "avant <time-of-day>", :pattern "[#\"(?i)(n[ ']importe quand )?(avant|jusqu'(a|à))\" (dim :time)]", :production "(merge %2 {:direction :before})"}
 #clj-duckling.engine/rule {:name "après <time-of-day>", :pattern "[#\"(?i)(apr(e|è)s|(a|à) partir de)\" (dim :time)]", :production "(merge %2 {:direction :after})"}
 #clj-duckling.engine/rule {:name "après le <day-of-month>", :pattern "[#\"(?i)(apr(e|è)s le|(a|à) partir du)\" (integer 1 31)]", :production "(merge (day-of-month (:value %2)) {:direction :after})"}]