[#clj-duckling.engine/rule {:name "intersect", :pattern "[(dim :time (fn* [p1__3554#] (not (:latent p1__3554#)))) (dim :time (fn* [p1__3555#] (not (:latent p1__3555#))))]", :production "(intersect %1 %2)"}
 #clj-duckling.engine/rule {:name "intersect by `da` or `de`", :pattern "[(dim :time (fn* [p1__3556#] (not (:latent p1__3556#)))) #\"(?i)d[ae]\" (dim :time (fn* [p1__3557#] (not (:latent p1__3557#))))]", :production "(intersect %1 %3)"}
 #clj-duckling.engine/rule {:name "two time tokens separated by \",\"", :pattern "[(dim :time (fn* [p1__3558#] (not (:latent p1__3558#)))) #\",\" (dim :time (fn* [p1__3559#] (not (:latent p1__3559#))))]", :production "(intersect %1 %3)"}
 #clj-duckling.engine/rule {:name "n[ao] <date>", :pattern "[#\"(?i)n[ao]\" (dim :time)]", :production "%2"}
 #clj-duckling.engine/rule {:name "n[ao] named-day", :pattern "[#\"(?i)n[ao]\" {:form :day-of-week}]", :production "%2"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)segunda((\\s|\\-)feira)?|seg\\.?\"", :production "(day-of-week 1)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)ter(ç|c)a((\\s|\\-)feira)?|ter\\.?\"", :production "(day-of-week 2)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)quarta((\\s|\\-)feira)?|qua\\.?\"", :production "(day-of-week 3)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)quinta((\\s|\\-)feira)?|qui\\.?\"", :production "(day-of-week 4)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)sexta((\\s|\\-)feira)?|sex\\.?\"", :production "(day-of-week 5)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)s[áa]bado|s(á|a)b\\.?\"", :production "(day-of-week 6)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)domingo|dom\\.?\"", :production "(day-of-week 7)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)janeiro|jan\\.?\"", :production "(month 1)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)fevereiro|fev\\.?\"", :production "(month 2)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)mar(ç|c)o|mar\\.?\"", :production "(month 3)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)abril|abr\\.?\"", :production "(month 4)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)maio|mai\\.?\"", :production "(month 5)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)junho|jun\\.?\"", :production "(month 6)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)julho|jul\\.?\"", :production "(month 7)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)agosto|ago\\.?\"", :production "(month 8)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)setembro|set\\.?\"", :production "(month 9)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)outubro|out\\.?\"", :production "(month 10)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)novembro|nov\\.?\"", :production "(month 11)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)dezembro|dez\\.?\"", :production "(month 12)"}
 #clj-duckling.engine/rule {:name "natal", :pattern "#\"(?i)natal\"", :production "(month-day 12 25)"}
 #clj-duckling.engine/rule {:name "vespera de ano novo", :pattern "#\"(?i)v[ée]spera d[eo] ano[\\s\\-]novo\"", :production "(month-day 12 31)"}
 #clj-duckling.engine/rule {:name "ano novo", :pattern "#\"(?i)ano novo|reveillon\"", :production "(month-day 1 1)"}
 #clj-duckling.engine/rule {:name "Tiradentes", :pattern "#\"(?i)tiradentes\"", :production "(month-day 4 21)"}
 #clj-duckling.engine/rule {:name "Dia do trabalhador", :pattern "#\"(?i)dia do trabalh(o|ador)\"", :production "(month-day 5 1)"}
 #clj-duckling.engine/rule {:name "Independecia", :pattern "#\"(?i)independ[êe]ncia\"", :production "(month-day 9 7)"}
 #clj-duckling.engine/rule {:name "Nossa Senhora Aparecida", :pattern "#\"(?i)nossa senhora (aparecida)?\"", :production "(month-day 10 12)"}
 #clj-duckling.engine/rule {:name "Finados", :pattern "#\"(?i)finados|dia dos mortos\"", :production "(month-day 11 2)"}
 #clj-duckling.engine/rule {:name "Proclamação da República", :pattern "#\"(?i)proclama[cç][aã]o da rep[úu]blica\"", :production "(month-day 11 15)"}
 #clj-duckling.engine/rule {:name "right now", :pattern "#\"agora|j[áa]|(nesse|neste) instante\"", :production "(cycle-nth :second 0)"}
 #clj-duckling.engine/rule {:name "now", :pattern "#\"(?i)(hoje)|(neste|nesse) momento\"", :production "(cycle-nth :day 0)"}
 #clj-duckling.engine/rule {:name "tomorrow", :pattern "#\"(?i)amanh[ãa]\"", :production "(cycle-nth :day 1)"}
 #clj-duckling.engine/rule {:name "yesterday", :pattern "#\"(?i)ontem\"", :production "(cycle-nth :day -1)"}
 #clj-duckling.engine/rule {:name "the day after tomorrow", :pattern "#\"(?i)depois de amanh[ãa]\"", :production "(cycle-nth :day 2)"}
 #clj-duckling.engine/rule {:name "the day before yesterday", :pattern "#\"(?i)anteontem|antes de ontem\"", :production "(cycle-nth :day -2)"}
 #clj-duckling.engine/rule {:name "this|next <day-of-week>", :pattern "[#\"(?i)es[ts][ae]|pr[óo]xim[ao]\" {:form :day-of-week}]", :production "(pred-nth-not-immediate %2 0)"}
 #clj-duckling.engine/rule {:name "this <time>", :pattern "[#\"(?i)es[ts][ae]\" (dim :time)]", :production "(pred-nth %2 0)"}
 #clj-duckling.engine/rule {:name "next <time>", :pattern "[#\"(?i)(d[ao]) pr[óo]xim[ao]s?\" (dim :time (fn* [p1__3560#] (not (:latent p1__3560#))))]", :production "(pred-nth-not-immediate %2 0)"}
 #clj-duckling.engine/rule {:name "next <time>", :pattern "[(dim :time (fn* [p1__3561#] (not (:latent p1__3561#)))) #\"(?i)que vem\"]", :production "(pred-nth-not-immediate %1 0)"}
 #clj-duckling.engine/rule {:name "last <time>", :pattern "[#\"(?i)[úu]ltim[ao]s?\" (dim :time)]", :production "(pred-nth %2 -1)"}
 #clj-duckling.engine/rule {:name "<named-month|named-day> past", :pattern "[(dim :time (fn* [p1__3562#] (not (:latent p1__3562#)))) #\"(?i)(da semana)? passad(o|a)\"]", :production "(pred-nth %1 -1)"}
 #clj-duckling.engine/rule {:name "<named-month|named-day> next", :pattern "[(dim :time) #\"(?i)(da pr[oó]xima semana)|(da semana)? que vem\"]", :production "(pred-nth %1 1)"}
 #clj-duckling.engine/rule {:name "year", :pattern "(integer 1000 2100)", :production "(year (:value %1))"}
 #clj-duckling.engine/rule {:name "year (latent)", :pattern "(integer -10000 999)", :production "(assoc (year (:value %1)) :latent true)"}
 #clj-duckling.engine/rule {:name "year (latent)", :pattern "(integer 2101 10000)", :production "(assoc (year (:value %1)) :latent true)"}
 #clj-duckling.engine/rule {:name "de <year>", :pattern "[#\"(?i)de|do ano\" (integer 1000 2100)]", :production "(year (:value %2))"}
 #clj-duckling.engine/rule {:name "day of month (1st)", :pattern "[#\"(?i)primeiro|um|1o\"]", :production "(day-of-month 1)"}
 #clj-duckling.engine/rule {:name "dia <day-of-month> (non ordinal)", :pattern "[#\"(?i)dia\" (integer 1 31)]", :production "(assoc (day-of-month (:value %2)) :latent true)"}
 #clj-duckling.engine/rule {:name "<day-of-month> de <named-month>", :pattern "[(integer 1 31) #\"(?i)de|\\/\" {:form :month}]", :production "(intersect %3 (day-of-month (:value %1)))"}
 #clj-duckling.engine/rule {:name "dia <day-of-month> de <named-month>", :pattern "[#\"(?i)dia\" (integer 1 31) #\"(?i)de|\\/\" {:form :month}]", :production "(intersect %4 (day-of-month (:value %2)))"}
 #clj-duckling.engine/rule {:name "time-of-day (latent)", :pattern "(integer 0 23)", :production "(assoc (hour (:value %1) true) :latent true)"}
 #clj-duckling.engine/rule {:name "noon", :pattern "#\"(?i)meio[\\s\\-]?dia\"", :production "(hour 12 false)"}
 #clj-duckling.engine/rule {:name "midnight", :pattern "#\"(?i)meia[\\s\\-]?noite\"", :production "(hour 0 false)"}
 #clj-duckling.engine/rule {:name "<time-of-day> horas", :pattern "[(fn* [p1__3563#] (:full-hour p1__3563#)) #\"(?i)h\\.?(ora)?s?\"]", :production "(dissoc %1 :latent)"}
 #clj-duckling.engine/rule {:name "às <time-of-day>", :pattern "[#\"(?i)[àa]s?\" {:form :time-of-day}]", :production "(dissoc %2 :latent)"}
 #clj-duckling.engine/rule {:name "às <hour-min>(time-of-day)", :pattern "[#\"(?i)[àa]s?\" {:form :time-of-day} #\"(?i)horas?\"]", :production "%2"}
 #clj-duckling.engine/rule {:name "às <hour-min> <time-of-day>", :pattern "[#\"(?i)[àa]s\" (dim :time (fn* [p1__3564#] (not (:latent p1__3564#)))) #\"(?i)da\" {:form :time-of-day}]", :production "(intersect %2 %4)"}
 #clj-duckling.engine/rule {:name "<day-of-week> às <hour-min>", :pattern "[{:form :time-of-day} #\"(?i)[àa]s\" (dim :time (fn* [p1__3565#] (not (:latent p1__3565#)))) #\"(?i)da|pela\" {:form :time-of-day}]", :production "(intersect %1 %3 %5)"}
 #clj-duckling.engine/rule {:name "hh(:|.|h)mm (time-of-day)", :pattern "#\"(?i)((?:[01]?\\d)|(?:2[0-3]))[:h\\.]([0-5]\\d)\"", :production "(hour-minute (Integer/parseInt (first (:groups %1))) (Integer/parseInt (second (:groups %1))) true)"}
 #clj-duckling.engine/rule {:name "hhmm (military time-of-day)", :pattern "#\"(?i)((?:[01]?\\d)|(?:2[0-3]))([0-5]\\d)\"", :production "(-> (hour-minute (Integer/parseInt (first (:groups %1))) (Integer/parseInt (second (:groups %1))) false) (assoc :latent true))"}
 #clj-duckling.engine/rule {:name "<time-of-day> am|pm", :pattern "[{:form :time-of-day} #\"(?i)([ap])\\.?m?\\.?\"]", :production "(let [[p meridiem] (if (= \"a\" (-> %2 :groups first clojure.string/lower-case)) [[(hour 0) (hour 11) true] :am] [[(hour 12) (hour 23) true] :pm])] (-> (intersect %1 (apply interval p)) (assoc :form :time-of-day)))"}
 #clj-duckling.engine/rule {:name "quarter (relative minutes)", :pattern "#\"(?i)e quinze\"", :production "{:relative-minutes 15}"}
 #clj-duckling.engine/rule {:name "3 quarter (relative minutes)", :pattern "#\"(?i)e quarenta e cinco\"", :production "{:relative-minutes 45}"}
 #clj-duckling.engine/rule {:name "half (relative minutes)", :pattern "#\"(?i)e (meia|trinta)\"", :production "{:relative-minutes 30}"}
 #clj-duckling.engine/rule {:name "number (as relative minutes)", :pattern "(integer 1 59)", :production "{:relative-minutes (:value %1)}"}
 #clj-duckling.engine/rule {:name "<integer> minutes (as relative minutes)", :pattern "[(integer 1 59) #\"(?i)min\\.?(uto)?s?\"]", :production "{:relative-minutes (:value %1)}"}
 #clj-duckling.engine/rule {:name "<hour-of-day> <integer> (as relative minutes)", :pattern "[(dim :time :full-hour) (fn* [p1__3566#] (:relative-minutes p1__3566#))]", :production "(hour-relativemin (:full-hour %1) (:relative-minutes %2) (:twelve-hour-clock? %1))"}
 #clj-duckling.engine/rule {:name "<integer> para as <hour-of-day> (as relative minutes)", :pattern "[(fn* [p1__3567#] (:relative-minutes p1__3567#)) #\"(?i)para ([oaà]s?)?\" (dim :time :full-hour)]", :production "(hour-relativemin (:full-hour %3) (- (:relative-minutes %1)) (:twelve-hour-clock? %3))"}
 #clj-duckling.engine/rule {:name "<hour-of-day> and <relative minutes>", :pattern "[(dim :time :full-hour) #\"(?i)e\" (fn* [p1__3568#] (:relative-minutes p1__3568#))]", :production "(hour-relativemin (:full-hour %1) (:relative-minutes %3) (:twelve-hour-clock? %1))"}
 #clj-duckling.engine/rule {:name "dd[/-.]mm[/-.]yyyy", :pattern "[#\"(3[01]|[12]\\d|0?[1-9])[\\.\\/\\-](0?[1-9]|1[0-2])[\\.\\/\\-](\\d{2,4})\"]", :production "(parse-dmy (first (:groups %1)) (second (:groups %1)) (nth (:groups %1) 2) true)"}
 #clj-duckling.engine/rule {:name "yyyy-mm-dd", :pattern "[#\"(\\d{2,4})-(0?[1-9]|1[0-2])-(3[01]|[12]\\d|0?[1-9])\"]", :production "(parse-dmy (nth (:groups %1) 2) (second (:groups %1)) (first (:groups %1)) true)"}
 #clj-duckling.engine/rule {:name "dd[/-]mm", :pattern "[#\"(3[01]|[12]\\d|0?[1-9])[\\/\\-](0?[1-9]|1[0-2])\"]", :production "(parse-dmy (first (:groups %1)) (second (:groups %1)) nil true)"}
 #clj-duckling.engine/rule {:name "morning", :pattern "#\"(?i)manh[ãa]\"", :production "(assoc (interval (hour 4 false) (hour 12 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "afternoon", :pattern "#\"(?i)tarde\"", :production "(assoc (interval (hour 12 false) (hour 19 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "evening", :pattern "#\"(?i)noite\"", :production "(assoc (interval (hour 18 false) (hour 0 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "in the <part-of-day>", :pattern "[#\"(?i)(de|pela)\" {:form :part-of-day}]", :production "(dissoc %2 :latent)"}
 #clj-duckling.engine/rule {:name "this <part-of-day>", :pattern "[#\"(?i)es[ts]a\" {:form :part-of-day}]", :production "(assoc (intersect (cycle-nth :day 0) %2) :form :part-of-day)"}
 #clj-duckling.engine/rule {:name "<part-of-day> dessa semana", :pattern "[(dim :time (fn* [p1__3569#] (not (:latent p1__3569#)))) #\"(?i)(d?es[ts]a semana)|agora\"]", :production "(assoc (intersect (cycle-nth :day 0) %1) :form :part-of-day)"}
 #clj-duckling.engine/rule {:name "<time-of-day> <part-of-day>", :pattern "[(dim :time) #\"(?i)(da|na|pela)\" {:form :part-of-day}]", :production "(intersect %1 %3)"}
 #clj-duckling.engine/rule {:name "<dim time> da tarde", :pattern "[(dim :time) #\"(?i)(da|na|pela) tarde\"]", :production "(intersect %1 (assoc (interval (hour 12 false) (hour 18 false) false) :form :part-of-day :latent true))"}
 #clj-duckling.engine/rule {:name "<dim time> da manha", :pattern "[(dim :time) #\"(?i)(da|na|pela) manh[ãa]\"]", :production "(intersect %1 (assoc (interval (hour 4 false) (hour 12 false) false) :form :part-of-day :latent true))"}
 #clj-duckling.engine/rule {:name "<dim time> da madrugada", :pattern "[(dim :time) #\"(?i)(da|na|pela) madruga(da)?\"]", :production "(intersect %1 (assoc (interval (hour 1 false) (hour 4 false) false) :form :part-of-day :latent true))"}
 #clj-duckling.engine/rule {:name "amanhã pela <part-of-day>", :pattern "[(dim :time) #\"(?i)(da|na|pela|a)\" {:form :part-of-day}]", :production "(intersect %1 %3)"}
 #clj-duckling.engine/rule {:name "week-end", :pattern "#\"(?i)final de semana|fim de semana|fds\"", :production "(interval (intersect (day-of-week 5) (hour 18 false)) (intersect (day-of-week 1) (hour 0 false)) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"(?i)ver[ãa]o\"", :production "(interval (month-day 6 21) (month-day 9 23) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"(?i)outono\"", :production "(interval (month-day 9 23) (month-day 12 21) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"(?i)inverno\"", :production "(interval (month-day 12 21) (month-day 3 20) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"(?i)primavera\"", :production "(interval (month-day 3 20) (month-day 6 21) false)"}
 #clj-duckling.engine/rule {:name "timezone", :pattern "#\"(?i)(YEKT|YEKST|YAPT|YAKT|YAKST|WT|WST|WITA|WIT|WIB|WGT|WGST|WFT|WEZ|WET|WESZ|WEST|WAT|WAST|VUT|VLAT|VLAST|VET|UZT|UYT|UYST|UTC|ULAT|TVT|TMT|TLT|TKT|TJT|TFT|TAHT|SST|SRT|SGT|SCT|SBT|SAST|SAMT|RET|PYT|PYST|PWT|PT|PST|PONT|PMST|PMDT|PKT|PHT|PHOT|PGT|PETT|PETST|PET|PDT|OMST|OMSST|NZST|NZDT|NUT|NST|NPT|NOVT|NOVST|NFT|NDT|NCT|MYT|MVT|MUT|MST|MSK|MSD|MMT|MHT|MEZ|MESZ|MDT|MAWT|MART|MAGT|MAGST|LINT|LHST|LHDT|KUYT|KST|KRAT|KRAST|KGT|JST|IST|IRST|IRKT|IRKST|IRDT|IOT|IDT|ICT|HOVT|HNY|HNT|HNR|HNP|HNE|HNC|HNA|HLV|HKT|HAY|HAT|HAST|HAR|HAP|HAE|HADT|HAC|HAA|GYT|GST|GMT|GILT|GFT|GET|GAMT|GALT|FNT|FKT|FKST|FJT|FJST|ET|EST|EGT|EGST|EET|EEST|EDT|ECT|EAT|EAST|EASST|DAVT|ChST|CXT|CVT|CST|COT|CLT|CLST|CKT|CHAST|CHADT|CET|CEST|CDT|CCT|CAT|CAST|BTT|BST|BRT|BRST|BOT|BNT|AZT|AZST|AZOT|AZOST|AWST|AWDT|AST|ART|AQTT|ANAT|ANAST|AMT|AMST|ALMT|AKST|AKDT|AFT|AEST|AEDT|ADT|ACST|ACDT)\"", :production "{:dim :timezone, :value (-> %1 :groups first clojure.string/upper-case)}"}
 #clj-duckling.engine/rule {:name "<time> timezone", :pattern "[(dim :time) (dim :timezone)]", :production "(assoc %1 :timezone (:value %2))"}
 #clj-duckling.engine/rule {:name "dd-dd <month>(interval)", :pattern "[#\"(3[01]|[12]\\d|0?[1-9])\" #\"(?i)\\-|a\" #\"(3[01]|[12]\\d|0?[1-9])\" #\"(?i)de\" {:form :month}]", :production "(interval (intersect %5 (day-of-month (Integer/parseInt (-> %1 :groups first)))) (intersect %5 (day-of-month (Integer/parseInt (-> %3 :groups first)))) true)"}
 #clj-duckling.engine/rule {:name "entre dd et dd <month>(interval)", :pattern "[#\"(?i)entre\" #\"(0?[1-9]|[12]\\d|3[01])\" #\"(?i)e?\" #\"(0?[1-9]|[12]\\d|3[01])\" #\"(?i)de\" {:form :month}]", :production "(interval (intersect %6 (day-of-month (Integer/parseInt (-> %2 :groups first)))) (intersect %6 (day-of-month (Integer/parseInt (-> %4 :groups first)))) true)"}
 #clj-duckling.engine/rule {:name "<datetime> - <datetime> (interval)", :pattern "[(dim :time (fn* [p1__3570#] (not (:latent p1__3570#)))) #\"\\-|a\" (dim :time (fn* [p1__3571#] (not (:latent p1__3571#))))]", :production "(interval %1 %3 false)"}
 #clj-duckling.engine/rule {:name "de <datetime> - <datetime> (interval)", :pattern "[#\"(?i)de?\" (dim :time) #\"\\-|a\" (dim :time)]", :production "(interval %2 %4 false)"}
 #clj-duckling.engine/rule {:name "entre <datetime> e <datetime> (interval)", :pattern "[#\"(?i)entre\" (dim :time) #\"e\" (dim :time)]", :production "(interval %2 %4 false)"}
 #clj-duckling.engine/rule {:name "dentro de <duration>", :pattern "[#\"(?i)(dentro de)|em\" (dim :duration)]", :production "(interval (cycle-nth :second 0) (in-duration (:value %2)) false)"}
 #clj-duckling.engine/rule {:name "ultimo <time>", :pattern "[#\"(?i)[uú]ltimo\" (dim :time)]", :production "(pred-nth %2 -1)"}
 #clj-duckling.engine/rule {:name "antes das <time-of-day>", :pattern "[#\"(?i)(antes|at[eé]|n[aã]o mais que) (d?[oaà]s?)?\" (dim :time)]", :production "(merge %2 {:direction :before})"}
 #clj-duckling.engine/rule {:name "depois das <time-of-day>", :pattern "[#\"(?i)(depois|ap[óo]s) d?([aáà][so]?|os?)\" (dim :time)]", :production "(merge %2 {:direction :after})"}]