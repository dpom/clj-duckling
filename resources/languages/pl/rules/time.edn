[#clj-duckling.engine/rule {:name "intersect", :pattern "[(dim :time (fn* [p1__3555#] (not (:latent p1__3555#)))) (dim :time (fn* [p1__3556#] (not (:latent p1__3556#))))]", :production "(intersect %1 %2)"}
 #clj-duckling.engine/rule {:name "intersect by \"of\", \"from\", \"'s\"", :pattern "[(dim :time (fn* [p1__3557#] (not (:latent p1__3557#)))) #\"(?i)z\" (dim :time (fn* [p1__3558#] (not (:latent p1__3558#))))]", :production "(intersect %1 %3)"}
 #clj-duckling.engine/rule {:name "intersect by \",\"", :pattern "[(dim :time (fn* [p1__3559#] (not (:latent p1__3559#)))) #\",\" (dim :time (fn* [p1__3560#] (not (:latent p1__3560#))))]", :production "(intersect %1 %3)"}
 #clj-duckling.engine/rule {:name "on <date>", :pattern "[#\"(?i)we?\" (dim :time)]", :production "%2"}
 #clj-duckling.engine/rule {:name "on a named-day", :pattern "[#\"(?i)we?\" {:form :day-of-week}]", :production "%2"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)poniedzia(l|ł)(ek|ku|kowi|kiem|kowy)|pon\\.?\"", :production "(day-of-week 1)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)wtorek|wtorku|wtorkowi|wtorkiem|wtr?\\.?\"", :production "(day-of-week 2)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)(Ś|ś|s)rod(a|ą|y|e|ę|zie|owy|o)|(s|ś|Ś)ro?\\.?\"", :production "(day-of-week 3)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)czwartek|czwartku|czwartkowi|czwartkiem|czwr?\\.?\"", :production "(day-of-week 4)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)piątek|piatek|piątku|piatku|piątkowi|piatkowi|piątkiem|piatkiem|pi(ą|a)tkowy|pia\\.?\"", :production "(day-of-week 5)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)sobota|soboty|sobocie|sobotę|sobote|sobotą|sobota|sobocie|soboto|sob\\.?\"", :production "(day-of-week 6)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"(?i)niedziela|niedzieli|niedzielę|niedziele|niedziela|niedzielą|niedzieli|niedzielo|nied?z?\\.?\"", :production "(day-of-week 7)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)styczeń|styczen|stycznia|styczniowi|styczniem|styczniu|sty(cz)?\\.?\"", :production "(month 1)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)luty|lutego|lutemu|lut?\\.?\"", :production "(month 2)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)marzec|marca|marcowi|marcem|marcu|marz?\\.?\"", :production "(month 3)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)kwiecień|kwiecien|kwietnia|kwietniowi|kwietniem|kwietniu|kwiet?\\.?\"", :production "(month 4)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)maj|maja|majowi|majem|maju\"", :production "(month 5)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)czerwiec|czerwca|czerwcowi|czerwcem|czerwcu|czer?\\.?\"", :production "(month 6)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)lipiec|lipca|lipcowi|lipcem|lipcu|lip\\.?\"", :production "(month 7)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)sierpień|sierpien|sierpnia|sierpniowi|sierpniem|sierpniu|sierp\\.?|sier\\.?|sie\\.?\"", :production "(month 8)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)wrzesień|wrzesien|września|wrzesnia|wrześniowi|wrzesniowi|wrzesień|wrzesien|wrześniem|wrzesniem|wrześniu|wrzesniu|wrz\\.?|wrze\\.?\"", :production "(month 9)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)pa(z|ź)dziernik(a|owi|iem|u)?|paź\\.?|paz\\.?\"", :production "(month 10)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)listopad|listopada|listopadowi|listopadem|listopadzie|lis\\.?|list\\.?\"", :production "(month 11)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"(?i)grudzień|grudzien|grudnia|grudniowi|grudniem|grudniu|gru\\.?|grud\\.?\"", :production "(month 12)"}
 #clj-duckling.engine/rule {:name "christmas", :pattern "#\"(?i)((Ś|ś|s)wi(e|ę)ta)? ?bo(z|ż)(ym|ego|e) narodzeni(e|a|u)\"", :production "(month-day 12 25)"}
 #clj-duckling.engine/rule {:name "christmas eve", :pattern "#\"(?i)(wigilia|wigilii|wigili(e|ę)|wigili(a|ą)|wigilio) ?(bo(z|ż)ego narodzenia)?\"", :production "(month-day 12 24)"}
 #clj-duckling.engine/rule {:name "new year's eve", :pattern "#\"(?i)sylwester|nowy rok\"", :production "(month-day 12 31)"}
 #clj-duckling.engine/rule {:name "valentine's day", :pattern "#\"(?i)walentynki\"", :production "(month-day 2 14)"}
 #clj-duckling.engine/rule {:name "Polish independence day", :pattern "#\"(?i)(s|ś)wiet(a|o) niepodleg(l|ł)o(s|ś)ci|(ś|s)w\\.? niepodleg(l|ł)o(s|ś)ci\"", :production "(month-day 11 11)"}
 #clj-duckling.engine/rule {:name "Father's Day", :pattern "#\"(?i)dzie(n|ń) ?(taty|ojca)\"", :production "(intersect (day-of-week 7) (month 6) (cycle-nth-after :week 2 (month-day 6 1)))"}
 #clj-duckling.engine/rule {:name "Mother's Day", :pattern "#\"(?i)dzie(n|ń) ? ma(my|tki|m)\"", :production "(intersect (day-of-week 7) (month 5) (cycle-nth-after :week 1 (month-day 5 1)))"}
 #clj-duckling.engine/rule {:name "halloween day", :pattern "#\"(?i)hall?owe?en( day)?\"", :production "(month-day 10 31)"}
 #clj-duckling.engine/rule {:name "thanksgiving day", :pattern "#\"(?i)((s|ś)wiet(a|o)|(dzie(n|ń)))? ?dzi(e|ę)kczynieni(e|a)\"", :production "(intersect (day-of-week 4) (month 11) (cycle-nth-after :week 4 (month-day 11 1)))"}
 #clj-duckling.engine/rule {:name "absorption of , after named day", :pattern "[{:form :day-of-week} #\",\"]", :production "%1"}
 #clj-duckling.engine/rule {:name "now", :pattern "#\"(?i)(w)? ?(tym|tej)? ?(teraz|momencie|chwili|momeńcie)\"", :production "(cycle-nth :second 0)"}
 #clj-duckling.engine/rule {:name "today", :pattern "#\"(?i)dzisiejszy|dzisiaj|dziś|dzis|w ten dzień|w ten dzien|w obecny dzień|w obecny dzien|obecnego dnia\"", :production "(cycle-nth :day 0)"}
 #clj-duckling.engine/rule {:name "tomorrow", :pattern "#\"(?i)jutr(o|a|u|em|ze(jszy|jsza)?)|jtr|jutr\"", :production "(cycle-nth :day 1)"}
 #clj-duckling.engine/rule {:name "day-after-tomorrow (single-word)", :pattern "#\"(?i)(po ?jutr(o|ze))\"", :production "(cycle-nth :day 2)"}
 #clj-duckling.engine/rule {:name "day-before-yesterday (single-word)", :pattern "#\"(?i)przedwczoraj\"", :production "(cycle-nth :day 2)"}
 #clj-duckling.engine/rule {:name "yesterday", :pattern "#\"(?i)wczoraj(szym|szy)?|wczrj|wczor\"", :production "(cycle-nth :day -1)"}
 #clj-duckling.engine/rule {:name "EOM|End of month", :pattern "#\"(?i)(na |w )?(koniec|ko(n|ń)ca|ko(n|ń)cu|ko(n|ń)cowi|ko(n|ń)cem|ko(n|ń)c(o|ó)wke) (miesi(a|ą)ca|msc)\"", :production "(cycle-nth :month 1)"}
 #clj-duckling.engine/rule {:name "EOY|End of year", :pattern "#\"(?i)(na |w )?(koniec|ko(n|ń)ca|ko(n|ń)cu|ko(n|ń)cowi|ko(n|ń)cem|ko(n|ń)c(o|ó)wke) (rok(u|owi|iem))\"", :production "(cycle-nth :year 1)"}
 #clj-duckling.engine/rule {:name "this|next <day-of-week>", :pattern "[#\"(?i)kolejn(ym|y|ego|emu|e)|nast(e|ę)pn(ym|y|ego|emu|e|(a|ą)|ej|e)\" {:form :day-of-week}]", :production "(pred-nth-not-immediate %2 0)"}
 #clj-duckling.engine/rule {:name "this <time>", :pattern "[#\"(?i)te(mu|n|go|j)|ta|to|tym|nadchodz(a|ą)c(ym|y|ego|emu|(a|ą)|ej)\" (dim :time)]", :production "(pred-nth %2 0)"}
 #clj-duckling.engine/rule {:name "next <time>", :pattern "[#\"(?i)kolejn(ym|y|ego|emu|(a|ą)|ej|e)|nast(e|ę)pn(ym|y|ego|emu|e|(a|ą)|ej|e)|przysz(l|ł)(ego|emu|ym|(a|ą)|ej|ych|i|ymi|y|e)\" (dim :time (fn* [p1__3561#] (not (:latent p1__3561#))))]", :production "(pred-nth-not-immediate %2 0)"}
 #clj-duckling.engine/rule {:name "last <time>", :pattern "[#\"(?i)ostatni(ego|ch|emu|mi|m|(a|ą)|ej)?|(po ?)?przedni(ego|ch|emu|e|mi|m|a)?\" (dim :time)]", :production "(pred-nth %2 -1)"}
 #clj-duckling.engine/rule {:name "<time> after next", :pattern "[(dim :time) #\"(?i)po kolejnym|po nast(e|ę)pn(ym|y|ego|emu|(a|ą)|ej|e)|po przysz(l|ł)(ym|y|ego|emu|(a|ą)|ej)\"]", :production "(pred-nth-not-immediate %1 1)"}
 #clj-duckling.engine/rule {:name "<time> before last", :pattern "[(dim :time) #\"(?i)przed ?ostatni(ego|ch|emu|mi|m|(a|ą)|ej)?\"]", :production "(pred-nth %1 -2)"}
 #clj-duckling.engine/rule {:name "last <day-of-week> of <time>", :pattern "[#\"(?i)ostatni(ego|ch|emu|mi|m|(a|ą)|ej)?\" {:form :day-of-week} #\"(?i)w(e)?|z(e)?\" (dim :time)]", :production "(pred-last-of %2 %4)"}
 #clj-duckling.engine/rule {:name "last <day-of-week> <time>", :pattern "[#\"(?i)ostatni(ego|ch|emu|mi|m|(a|ą)|ej)?\" {:form :day-of-week} (dim :time)]", :production "(pred-last-of %2 %3)"}
 #clj-duckling.engine/rule {:name "last <cycle> of <time>", :pattern "[#\"(?i)ostatni(ego|ch|emu|mi|m|(a|ą)|ej)?\" (dim :cycle) #\"(?i)w(e)?|z(e)?\" (dim :time)]", :production "(cycle-last-of %2 %4)"}
 #clj-duckling.engine/rule {:name "last <cycle> <time>", :pattern "[#\"(?i)ostatni(ego|ch|emu|mi|m|(a|ą)|ej)?\" (dim :cycle) (dim :time)]", :production "(cycle-last-of %2 %3)"}
 #clj-duckling.engine/rule {:name "nth <time> of <time>", :pattern "[(dim :ordinal) (dim :time) #\"(?i)w(e)?|z(e)?\" (dim :time)]", :production "(pred-nth (intersect %4 %2) (dec (:value %1)))"}
 #clj-duckling.engine/rule {:name "nth <time> <time>", :pattern "[(dim :ordinal) (dim :time) (dim :time)]", :production "(pred-nth (intersect %3 %2) (dec (:value %1)))"}
 #clj-duckling.engine/rule {:name "nth <time> after <time>", :pattern "[(dim :ordinal) (dim :time) #\"(?i)po\" (dim :time)]", :production "(pred-nth-after %2 %4 (dec (:value %1)))"}
 #clj-duckling.engine/rule {:name "year", :pattern "(integer 1000 2100)", :production "(year (:value %1))"}
 #clj-duckling.engine/rule {:name "year (latent)", :pattern "(integer -10000 999)", :production "(assoc (year (:value %1)) :latent true)"}
 #clj-duckling.engine/rule {:name "year (latent)", :pattern "(integer 2101 10000)", :production "(assoc (year (:value %1)) :latent true)"}
 #clj-duckling.engine/rule {:name "<day-of-month> (ordinal)", :pattern "[(dim :ordinal (fn* [p1__3562#] (<= 1 (:value p1__3562#) 31)))]", :production "(assoc (day-of-month (:value %1)) :latent true)"}
 #clj-duckling.engine/rule {:name "<named-month> <day-of-month> (ordinal)", :pattern "[{:form :month} (dim :ordinal (fn* [p1__3563#] (<= 1 (:value p1__3563#) 31)))]", :production "(intersect %1 (day-of-month (:value %2)))"}
 #clj-duckling.engine/rule {:name "<named-month> <day-of-month> (non ordinal)", :pattern "[{:form :month} (integer 1 31)]", :production "(intersect %1 (day-of-month (:value %2)))"}
 #clj-duckling.engine/rule {:name "<day-of-month> (ordinal) of <named-month>", :pattern "[(dim :ordinal (fn* [p1__3564#] (<= 1 (:value p1__3564#) 31))) #\"(?i)of|in\" {:form :month}]", :production "(intersect %3 (day-of-month (:value %1)))"}
 #clj-duckling.engine/rule {:name "<day-of-month> (non ordinal) of <named-month>", :pattern "[(integer 1 31) #\"(?i)of|in\" {:form :month}]", :production "(intersect %3 (day-of-month (:value %1)))"}
 #clj-duckling.engine/rule {:name "<day-of-month> (non ordinal) <named-month>", :pattern "[(integer 1 31) {:form :month}]", :production "(intersect %2 (day-of-month (:value %1)))"}
 #clj-duckling.engine/rule {:name "<day-of-month>(ordinal) <named-month>", :pattern "[(dim :ordinal (fn* [p1__3565#] (<= 1 (:value p1__3565#) 31))) {:form :month}]", :production "(intersect %2 (day-of-month (:value %1)))"}
 #clj-duckling.engine/rule {:name "<day-of-month>(ordinal) <named-month> year", :pattern "[(dim :ordinal (fn* [p1__3566#] (<= 1 (:value p1__3566#) 31))) {:form :month} #\"(\\d{2,4})\"]", :production "(intersect %2 (day-of-month (:value %1)) (year (Integer/parseInt (first (:groups %3)))))"}
 #clj-duckling.engine/rule {:name "the ides of <named-month>", :pattern "[#\"(?i)the ides? of\" {:form :month}]", :production "(intersect %2 (day-of-month (if (#{7 3 5 10} (:month %2)) 15 13)))"}
 #clj-duckling.engine/rule {:name "<integer> (latent time-of-day)", :pattern "(integer 0 23)", :production "(assoc (hour (:value %1) true) :latent true)"}
 #clj-duckling.engine/rule {:name "at <time-of-day>", :pattern "[#\"(?i)o|na|@\" {:form :time-of-day}]", :production "(dissoc %2 :latent)"}
 #clj-duckling.engine/rule {:name "<time-of-day> o'clock", :pattern "[{:form :time-of-day} #\"(?i)godzina\"]", :production "(dissoc %1 :latent)"}
 #clj-duckling.engine/rule {:name "hh:mm", :pattern "#\"(?i)((?:[01]?\\d)|(?:2[0-3]))[:.]([0-5]\\d)\"", :production "(hour-minute (Integer/parseInt (first (:groups %1))) (Integer/parseInt (second (:groups %1))) true)"}
 #clj-duckling.engine/rule {:name "hh:mm:ss", :pattern "#\"(?i)((?:[01]?\\d)|(?:2[0-3]))[:.]([0-5]\\d)[:.]([0-5]\\d)\"", :production "(hour-minute-second (Integer/parseInt (first (:groups %1))) (Integer/parseInt (second (:groups %1))) (Integer/parseInt (second (next (:groups %1)))) true)"}
 #clj-duckling.engine/rule {:name "hhmm (military)", :pattern "#\"(?i)((?:[01]?\\d)|(?:2[0-3]))([0-5]\\d)\"", :production "(-> (hour-minute (Integer/parseInt (first (:groups %1))) (Integer/parseInt (second (:groups %1))) false) (assoc :latent true))"}
 #clj-duckling.engine/rule {:name "hhmm (military) am|pm", :pattern "[#\"(?i)((?:1[012]|0?\\d))([0-5]\\d)\" #\"(?i)([ap])\\.?m?\\.?\"]", :production "(let [[p meridiem] (if (= \"a\" (-> %2 :groups first .toLowerCase)) [[(hour 0) (hour 12) false] :am] [[(hour 12) (hour 0) false] :pm])] (-> (intersect (hour-minute (Integer/parseInt (first (:groups %1))) (Integer/parseInt (second (:groups %1))) true) (apply interval p)) (assoc :form :time-of-day)))"}
 #clj-duckling.engine/rule {:name "<time-of-day> rano", :pattern "[{:form :time-of-day} #\"(?i)(z )?ran(o|a|u|em)\"]", :production "(let [[p meridiem] [[(hour 0) (hour 12) false] :am]] (-> (intersect %1 (apply interval p)) (assoc :form :time-of-day)))"}
 #clj-duckling.engine/rule {:name "<time-of-day> popołudniu/wieczorem/w nocy", :pattern "[{:form :time-of-day} #\"(?i)(w )?noc(y|(a|ą))|(po ?)?po(l|ł)udni(em|e|a|u)|wiecz(o|ó)r(i|u|a|owi|em|rze)\"]", :production "(let [[p meridiem] [[(hour 12) (hour 0) false] :pm]] (-> (intersect %1 (apply interval p)) (assoc :form :time-of-day)))"}
 #clj-duckling.engine/rule {:name "<ordinal> (as hour)", :pattern "[(dim :ordinal (fn* [p1__3567#] (<= 1 (:value p1__3567#) 24)))]", :production "(hour (:value %1) true)"}
 #clj-duckling.engine/rule {:name "noon", :pattern "#\"(?i)po(l|ł)udni(em|e|a|u)\"", :production "(hour 12 false)"}
 #clj-duckling.engine/rule {:name "quarter (relative minutes)", :pattern "#\"(?i)kwadrans(ie|owi|em|a)?\"", :production "{:relative-minutes 15}"}
 #clj-duckling.engine/rule {:name "half (relative minutes)", :pattern "#\"p(o|ó)(l|ł)\"", :production "{:relative-minutes 30}"}
 #clj-duckling.engine/rule {:name "number (as relative minutes)", :pattern "(integer 1 59)", :production "{:relative-minutes (:value %1)}"}
 #clj-duckling.engine/rule {:name "<hour-of-day> <integer> (as relative minutes)", :pattern "[(dim :time :full-hour) (fn* [p1__3568#] (:relative-minutes p1__3568#))]", :production "(hour-relativemin (:full-hour %1) (:relative-minutes %2) true)"}
 #clj-duckling.engine/rule {:name "relative minutes to|till|before <integer> (hour-of-day)", :pattern "[(fn* [p1__3569#] (:relative-minutes p1__3569#)) #\"(?i)do|przed\" (dim :time :full-hour)]", :production "(hour-relativemin (:full-hour %3) (- (:relative-minutes %1)) true)"}
 #clj-duckling.engine/rule {:name "relative minutes after|past <integer> (hour-of-day)", :pattern "[(fn* [p1__3570#] (:relative-minutes p1__3570#)) #\"(?i)po\" (dim :time :full-hour)]", :production "(hour-relativemin (:full-hour %3) (:relative-minutes %1) true)"}
 #clj-duckling.engine/rule {:name "mm/dd/yyyy", :pattern "#\"(0?[1-9]|1[0-2])[/-](3[01]|[12]\\d|0?[1-9])[-/](\\d{2,4})\"", :production "(parse-dmy (second (:groups %1)) (first (:groups %1)) (nth (:groups %1) 2) true)"}
 #clj-duckling.engine/rule {:name "yyyy-mm-dd", :pattern "#\"(\\d{2,4})-(0?[1-9]|1[0-2])-(3[01]|[12]\\d|0?[1-9])\"", :production "(parse-dmy (nth (:groups %1) 2) (second (:groups %1)) (first (:groups %1)) true)"}
 #clj-duckling.engine/rule {:name "mm/dd", :pattern "#\"(0?[1-9]|1[0-2])/(3[01]|[12]\\d|0?[1-9])\"", :production "(parse-dmy (second (:groups %1)) (first (:groups %1)) nil true)"}
 #clj-duckling.engine/rule {:name "morning", :pattern "[#\"(?i)rano|poran(ek|ku|ka)|z rana|(s|ś)witem\"]", :production "(assoc (interval (hour 4 false) (hour 12 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "afternoon", :pattern "[#\"(?i)po(l|ł)udni(em|e|a|u)\"]", :production "(assoc (interval (hour 12 false) (hour 19 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "evening|night", :pattern "[#\"(?i)wiecz(o|ó)r(em|owi|ze|a|u)?|noc(ą)?\"]", :production "(assoc (interval (hour 18 false) (hour 0 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "lunch", :pattern "[#\"(?i)(na )?la?u?nc(z|h)|obiad\"]", :production "(assoc (interval (hour 12 false) (hour 14 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "in|during the <part-of-day>", :pattern "[#\"(?i)(w|na) ?(czas(ie)?)\" {:form :part-of-day}]", :production "(dissoc %2 :latent)"}
 #clj-duckling.engine/rule {:name "this <part-of-day>", :pattern "[#\"(?i)ten|tego|ta|to\" {:form :part-of-day}]", :production "(assoc (intersect (cycle-nth :day 0) %2) :form :part-of-day)"}
 #clj-duckling.engine/rule {:name "<time> <part-of-day>", :pattern "[(dim :time) {:form :part-of-day}]", :production "(intersect %2 %1)"}
 #clj-duckling.engine/rule {:name "week-end", :pattern "#\"(?i)((wek|week|wik)(\\s|-)?end|wkend)\"", :production "(interval (intersect (day-of-week 5) (hour 18 false)) (intersect (day-of-week 1) (hour 0 false)) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"(?i)lato|lata|latu|latem|lecie\"", :production "(interval (month-day 6 21) (month-day 9 23) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"(?i)jesień|jesien|jesieni|jesienią|jesienia\"", :production "(interval (month-day 9 23) (month-day 12 21) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"(?i)zima|zimy|zimie|zimę|zime|zimą|zima|zimie|zimo\"", :production "(interval (month-day 12 21) (month-day 3 20) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"(?i)wiosna|wiosny|wiośnie|wiosnie|wiosnę|wiosne|wiosną|wiosna|wiośnie|wiosnie|wiosno\"", :production "(interval (month-day 3 20) (month-day 6 21) false)"}
 #clj-duckling.engine/rule {:name "timezone", :pattern "#\"(?i)(YEKT|YEKST|YAPT|YAKT|YAKST|WT|WST|WITA|WIT|WIB|WGT|WGST|WFT|WEZ|WET|WESZ|WEST|WAT|WAST|VUT|VLAT|VLAST|VET|UZT|UYT|UYST|UTC|ULAT|TVT|TMT|TLT|TKT|TJT|TFT|TAHT|SST|SRT|SGT|SCT|SBT|SAST|SAMT|RET|PYT|PYST|PWT|PT|PST|PONT|PMST|PMDT|PKT|PHT|PHOT|PGT|PETT|PETST|PET|PDT|OMST|OMSST|NZST|NZDT|NUT|NST|NPT|NOVT|NOVST|NFT|NDT|NCT|MYT|MVT|MUT|MST|MSK|MSD|MMT|MHT|MEZ|MESZ|MDT|MAWT|MART|MAGT|MAGST|LINT|LHST|LHDT|KUYT|KST|KRAT|KRAST|KGT|JST|IST|IRST|IRKT|IRKST|IRDT|IOT|IDT|ICT|HOVT|HNY|HNT|HNR|HNP|HNE|HNC|HNA|HLV|HKT|HAY|HAT|HAST|HAR|HAP|HAE|HADT|HAC|HAA|GYT|GST|GMT|GILT|GFT|GET|GAMT|GALT|FNT|FKT|FKST|FJT|FJST|ET|EST|EGT|EGST|EET|EEST|EDT|ECT|EAT|EAST|EASST|DAVT|ChST|CXT|CVT|CST|COT|CLT|CLST|CKT|CHAST|CHADT|CET|CEST|CDT|CCT|CAT|CAST|BTT|BST|BRT|BRST|BOT|BNT|AZT|AZST|AZOT|AZOST|AWST|AWDT|AST|ART|AQTT|ANAT|ANAST|AMT|AMST|ALMT|AKST|AKDT|AFT|AEST|AEDT|ADT|ACST|ACDT)\"", :production "{:dim :timezone, :value (-> %1 :groups first .toUpperCase)}"}
 #clj-duckling.engine/rule {:name "<time> timezone", :pattern "[(dim :time) (dim :timezone)]", :production "(set-timezone %1 (:value %2))"}
 #clj-duckling.engine/rule {:name "<time-of-day> approximately", :pattern "[{:form :time-of-day} #\"(?i)o?ko(l|ł)o|mniej wi(e|ę)cej\"]", :production "(-> %1 (dissoc :latent) (merge {:precision \"approximate\"}))"}
 #clj-duckling.engine/rule {:name "<time-of-day> sharp", :pattern "[{:form :time-of-day} #\"(?i)r(o|ó)wno|dok(l|ł)adnie\"]", :production "(-> %1 (dissoc :latent) (merge {:precision \"exact\"}))"}
 #clj-duckling.engine/rule {:name "about <time-of-day>", :pattern "[#\"(?i)o?ko(l|ł)o|mniej wi(e|ę)cej|tak o\" {:form :time-of-day}]", :production "(-> %2 (dissoc :latent) (merge {:precision \"approximate\"}))"}
 #clj-duckling.engine/rule {:name "exactly <time-of-day>", :pattern "[#\"(?i)(r(o|ó)wno|dok(l|ł)adnie)( o)?\" {:form :time-of-day}]", :production "(-> %2 (dissoc :latent) (merge {:precision \"exact\"}))"}
 #clj-duckling.engine/rule {:name "<month> dd-dd (interval)", :pattern "[{:form :month} #\"(3[01]|[12]\\d|0?[1-9])\" #\"\\-|do|po|aż do|az do|aż po|az po\" #\"(3[01]|[12]\\d|0?[1-9])\"]", :production "(interval (intersect %1 (day-of-month (Integer/parseInt (-> %2 :groups first)))) (intersect %1 (day-of-month (Integer/parseInt (-> %4 :groups first)))) true)"}
 #clj-duckling.engine/rule {:name "<datetime> - <datetime> (interval)", :pattern "[(dim :time (fn* [p1__3571#] (not (:latent p1__3571#)))) #\"\\-|(p|d)o|a(ż|z) (p|d)o\" (dim :time (fn* [p1__3572#] (not (:latent p1__3572#))))]", :production "(interval %1 %3 true)"}
 #clj-duckling.engine/rule {:name "from <datetime> - <datetime> (interval)", :pattern "[#\"(?i)od|p(o|ó)(z|ź)niej ni(z|ż)\" (dim :time) #\"\\-|do|po|aż do|az do|aż po|az po|ale przed\" (dim :time)]", :production "(interval %2 %4 true)"}
 #clj-duckling.engine/rule {:name "between <datetime> and <datetime> (interval)", :pattern "[#\"(?i)(po|po )?mi(e|ę)dzy\" (dim :time) #\"a|i\" (dim :time)]", :production "(interval %2 %4 true)"}
 #clj-duckling.engine/rule {:name "<time-of-day> - <time-of-day> (interval)", :pattern "[(fn* [p1__3573#] (and (= :time-of-day (:form p1__3573#)) (not (:latent p1__3573#)))) #\"\\-|:|do|po|aż do|az do|aż po|az po\" {:form :time-of-day}]", :production "(interval %1 %3 true)"}
 #clj-duckling.engine/rule {:name "from <time-of-day> - <time-of-day> (interval)", :pattern "[#\"(?i)(niż|niz|od)\" {:form :time-of-day} #\"((but )?before)|\\-|do|po|aż do|az do|aż po|az po\" {:form :time-of-day}]", :production "(interval %2 %4 true)"}
 #clj-duckling.engine/rule {:name "between <time-of-day> and <time-of-day> (interval)", :pattern "[#\"(?i)(po|po )?miedzy|między\" {:form :time-of-day} #\"a|i\" {:form :time-of-day}]", :production "(interval %2 %4 true)"}
 #clj-duckling.engine/rule {:name "within <duration>", :pattern "[#\"(?i)(w )?ci(a|ą)gu|zakresie|obrębie|obrebie\" (dim :duration)]", :production "(interval (cycle-nth :second 0) (in-duration (:value %2)) false)"}
 #clj-duckling.engine/rule {:name "by <time>", :pattern "[#\"(?i)(a[zż] )?do\" (dim :time)]", :production "(interval (cycle-nth :second 0) %2 false)"}
 #clj-duckling.engine/rule {:name "by the end of <time>", :pattern "[#\"(?i)do (ko[ńn]ca )?(tego)?\" (dim :time)]", :production "(interval (cycle-nth :second 0) %2 true)"}
 #clj-duckling.engine/rule {:name "until <time-of-day>", :pattern "[#\"(?i)(a[żz] )?do|przed\" (dim :time)]", :production "(merge %2 {:direction :before})"}
 #clj-duckling.engine/rule {:name "after <time-of-day>", :pattern "[#\"(?i)po\" (dim :time)]", :production "(merge %2 {:direction :after})"}
 #clj-duckling.engine/rule {:name "<hour-of-day> - <hour-of-day> (interval)", :pattern "[{:form :time-of-day} #\"-|do|aż po|po\" (fn* [p1__3574#] (and (= :time-of-day (:form p1__3574#)) (not (:latent p1__3574#))))]", :production "(interval %1 %3 :exclusive)"}
 #clj-duckling.engine/rule {:name "from <hour-of-day> - <hour-of-day> (interval)", :pattern "[#\"(?i)od\" {:form :time-of-day} #\"-|to|th?ru|through|until\" (fn* [p1__3575#] (and (= :time-of-day (:form p1__3575#)) (not (:latent p1__3575#))))]", :production "(interval %2 %4 :exclusive)"}]