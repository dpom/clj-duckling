[#clj-duckling.engine/rule {:name "second (unit-of-duration)", :pattern "#\"(?i)sekund(y|zie|(e|ę)|(a|ą)|om|ami|ach|o)?|s\"", :production "{:dim :unit-of-duration, :grain :second}"}
 #clj-duckling.engine/rule {:name "minute (unit-of-duration)", :pattern "#\"(?i)minut(y|cie|(e|ę)|om|o|ami|ach|(a|ą))?|m\"", :production "{:dim :unit-of-duration, :grain :minute}"}
 #clj-duckling.engine/rule {:name "hour (unit-of-duration)", :pattern "#\"(?i)h|godzin(y|(e|ę)|ie|om|o|ami|ach|(a|ą))?\"", :production "{:dim :unit-of-duration, :grain :hour}"}
 #clj-duckling.engine/rule {:name "day (unit-of-duration)", :pattern "#\"(?i)dzie(n|ń|ni(a|ą))|dni(owi|ach|a|ą)?\"", :production "{:dim :unit-of-duration, :grain :day}"}
 #clj-duckling.engine/rule {:name "week (unit-of-duration)", :pattern "#\"(?i)tydzie(n|ń|)|tygod(ni(owi|u|a|em))|tygodn(iach|iami|iom|ie|i)|tyg\\.?\"", :production "{:dim :unit-of-duration, :grain :week}"}
 #clj-duckling.engine/rule {:name "month (unit-of-duration)", :pattern "#\"(?i)miesi(a|ą)c(owi|em|u|e|om|ami|ach|a)?\"", :production "{:dim :unit-of-duration, :grain :month}"}
 #clj-duckling.engine/rule {:name "year (unit-of-duration)", :pattern "#\"(?i)rok(u|owi|iem)?|lat(ami|ach|a|om)?\"", :production "{:dim :unit-of-duration, :grain :year}"}
 #clj-duckling.engine/rule {:name "half an hour", :pattern "[#\"(?i)p(o|ó)(l|ł) godziny\"]", :production "{:dim :duration, :value (duration :minute 30)}"}
 #clj-duckling.engine/rule {:name "<integer> <unit-of-duration>", :pattern "[(integer 0) (dim :unit-of-duration)]", :production "{:dim :duration, :value (duration (:grain %2) (:value %1))}"}
 #clj-duckling.engine/rule {:name "<integer> more <unit-of-duration>", :pattern "[(integer 0) #\"(?i)more|less\" (dim :unit-of-duration)]", :production "{:dim :duration, :value (duration (:grain %3) (:value %1))}"}
 #clj-duckling.engine/rule {:name "number.number hours", :pattern "[#\"(\\d+)\\.(\\d+)\" #\"(?i)godzin(y)?\"]", :production "{:dim :duration, :value (duration :minute (int (+ (quot (* 6 (Long/parseLong (second (:groups %1)))) (java.lang.Math/pow 10 (- (count (second (:groups %1))) 1))) (* 60 (Long/parseLong (first (:groups %1)))))))}"}
 #clj-duckling.engine/rule {:name "<integer> and an half hours", :pattern "[(integer 0) #\"(?i)i (p(o|ó)(l|ł)) godziny\"]", :production "{:dim :duration, :value (duration :minute (+ 30 (* 60 (:value %1))))}"}
 #clj-duckling.engine/rule {:name "<unit-of-duration> as a duration", :pattern "(dim :unit-of-duration)", :production "{:dim :duration, :value (duration (:grain %1) 1)}"}
 #clj-duckling.engine/rule {:name "in <duration>", :pattern "[#\"(?i)(w( ?(prze)?ciągu)?|za) ?(jeszcze)?|przez\" (dim :duration)]", :production "(in-duration (:value %2))"}
 #clj-duckling.engine/rule {:name "after <duration>", :pattern "[#\"(?i)po\" (dim :duration)]", :production "(merge (in-duration (:value %2)) {:direction :after})"}
 #clj-duckling.engine/rule {:name "<duration> from now", :pattern "[(dim :duration) #\"(?i)od (dzi(s|ś)|teraz)\"]", :production "(in-duration (:value %1))"}
 #clj-duckling.engine/rule {:name "<duration> ago", :pattern "[(dim :duration) #\"(?i)temu\"]", :production "(duration-ago (:value %1))"}
 #clj-duckling.engine/rule {:name "<duration> hence", :pattern "[(dim :duration) #\"(?i)p(o|ó)(z|ź)niej|potem\"]", :production "(in-duration (:value %1))"}
 #clj-duckling.engine/rule {:name "<duration> after <time>", :pattern "[(dim :duration) #\"(?i)po\" (dim :time)]", :production "(duration-after (:value %1) %3)"}
 #clj-duckling.engine/rule {:name "<duration> before <time>", :pattern "[(dim :duration) #\"(?i)do|przed\" (dim :time)]", :production "(duration-before (:value %1) %3)"}
 #clj-duckling.engine/rule {:name "about <duration>", :pattern "[#\"(?i)(oko(l|ł)o|miej wi(ę|e)cej|jakie(s|ś))\" (dim :duration)]", :production "(-> %2 (merge {:precision \"approximate\"}))"}
 #clj-duckling.engine/rule {:name "exactly <duration>", :pattern "[#\"(?i)r(o|ó)wno|dok(l|ł)adnie\" (dim :duration)]", :production "(-> %2 (merge {:precision \"exact\"}))"}]