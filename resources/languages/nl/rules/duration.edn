[#clj-duckling.engine/rule {:name "second (unit-of-duration)", :pattern "#\"(?i)sec(onde)?n?\"", :production "{:dim :unit-of-duration, :grain :second}"}
 #clj-duckling.engine/rule {:name "minute (unit-of-duration)", :pattern "#\"(?i)min|minuut|minuten\"", :production "{:dim :unit-of-duration, :grain :minute}"}
 #clj-duckling.engine/rule {:name "hour (unit-of-duration)", :pattern "#\"(?i)uur\"", :production "{:dim :unit-of-duration, :grain :hour}"}
 #clj-duckling.engine/rule {:name "day (unit-of-duration)", :pattern "#\"(?i)dagen?\"", :production "{:dim :unit-of-duration, :grain :day}"}
 #clj-duckling.engine/rule {:name "week (unit-of-duration)", :pattern "#\"(?i)weken?\"", :production "{:dim :unit-of-duration, :grain :week}"}
 #clj-duckling.engine/rule {:name "month (unit-of-duration)", :pattern "#\"(?i)maanden?\"", :production "{:dim :unit-of-duration, :grain :month}"}
 #clj-duckling.engine/rule {:name "year (unit-of-duration)", :pattern "#\"(?i)jaar?\"", :production "{:dim :unit-of-duration, :grain :year}"}
 #clj-duckling.engine/rule {:name "quarter of an hour", :pattern "[#\"(?i)(1/4\\s?uur?|(a\\s)?een kwartier)\"]", :production "{:dim :duration, :value (duration :minute 15)}"}
 #clj-duckling.engine/rule {:name "half an hour", :pattern "[#\"(?i)(1/2\\s?uur?|half uur)\"]", :production "{:dim :duration, :value (duration :minute 30)}"}
 #clj-duckling.engine/rule {:name "three-quarters of an hour", :pattern "[#\"(?i)(3/4\\s?uur?|drie kwartier)\"]", :production "{:dim :duration, :value (duration :minute 45)}"}
 #clj-duckling.engine/rule {:name "fortnight", :pattern "#\"(?i)veertien dagen\"", :production "{:dim :duration, :value (duration :day 14)}"}
 #clj-duckling.engine/rule {:name "<integer> <unit-of-duration>", :pattern "[(integer 0) (dim :unit-of-duration)]", :production "{:dim :duration, :value (duration (:grain %2) (:value %1))}"}
 #clj-duckling.engine/rule {:name "<integer> more <unit-of-duration>", :pattern "[(integer 0) #\"(?i)meer|minder\" (dim :unit-of-duration)]", :production "{:dim :duration, :value (duration (:grain %3) (:value %1))}"}
 #clj-duckling.engine/rule {:name "number.number hours", :pattern "[#\"(\\d+)\\.(\\d+)\" #\"(?i)uren?\"]", :production "{:dim :duration, :value (duration :minute (int (+ (quot (* 6 (Long/parseLong (second (:groups %1)))) (java.lang.Math/pow 10 (- (count (second (:groups %1))) 1))) (* 60 (Long/parseLong (first (:groups %1)))))))}"}
 #clj-duckling.engine/rule {:name "<integer> and an half hours", :pattern "[(integer 0) #\"(?i)anderhalf uur?\"]", :production "{:dim :duration, :value (duration :minute (+ 30 (* 60 (:value %1))))}"}
 #clj-duckling.engine/rule {:name "a <unit-of-duration>", :pattern "[#\"(?i)een?\" (dim :unit-of-duration)]", :production "{:dim :duration, :value (duration (:grain %2) 1)}"}
 #clj-duckling.engine/rule {:name "in <duration>", :pattern "[#\"(?i)in\" (dim :duration)]", :production "(in-duration (:value %2))"}
 #clj-duckling.engine/rule {:name "for <duration>", :pattern "[#\"(?i)voor\" (dim :duration)]", :production "(in-duration (:value %2))"}
 #clj-duckling.engine/rule {:name "after <duration>", :pattern "[#\"(?i)na\" (dim :duration)]", :production "(merge (in-duration (:value %2)) {:direction :after})"}
 #clj-duckling.engine/rule {:name "<duration> from now", :pattern "[(dim :duration) #\"(?i)van (vandaag|nu)\"]", :production "(in-duration (:value %1))"}
 #clj-duckling.engine/rule {:name "<duration> ago", :pattern "[(dim :duration) #\"(?i)geleden\"]", :production "(duration-ago (:value %1))"}
 #clj-duckling.engine/rule {:name "<duration> after <time>", :pattern "[(dim :duration) #\"(?i)na\" (dim :time)]", :production "(duration-after (:value %1) %3)"}
 #clj-duckling.engine/rule {:name "<duration> before <time>", :pattern "[(dim :duration) #\"(?i)voor\" (dim :time)]", :production "(duration-before (:value %1) %3)"}
 #clj-duckling.engine/rule {:name "about <duration>", :pattern "[#\"(?i)(rond)\" (dim :duration)]", :production "(-> %2 (merge {:precision \"approximate\"}))"}
 #clj-duckling.engine/rule {:name "exactly <duration>", :pattern "[#\"(?i)precies\" (dim :duration)]", :production "(-> %2 (merge {:precision \"exact\"}))"}]