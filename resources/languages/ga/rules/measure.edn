[#clj-duckling.engine/rule {:name "number as distance", :pattern "(dim :number)", :production "{:dim :distance, :latent true, :value (:value %1)}"}
 #clj-duckling.engine/rule {:name "<dist> meters", :pattern "[(dim :distance) #\"(?i)mh?[eé]adai?r\"]", :production "(-> %1 (dissoc :latent) (merge {:unit \"metre\"}))"}
 #clj-duckling.engine/rule {:name "<dist> centimeters", :pattern "[(dim :distance) #\"(?i)(c\\.?m\\.?|g?ch?eintimh?[eé]adai?r)\"]", :production "(-> %1 (dissoc :latent) (merge {:unit \"centimetre\", :normalized {:value (* 0.01 (-> %1 :value)), :unit \"metre\"}}))"}
 #clj-duckling.engine/rule {:name "<dist> miles", :pattern "[(dim :distance) #\"(?i)mh?[íi]lt?e\"]", :production "(-> %1 (dissoc :latent) (merge {:unit \"mile\", :normalized {:value (* 1609 (-> %1 :value)), :unit \"metre\"}}))"}
 #clj-duckling.engine/rule {:name "<latent dist> km", :pattern "[(dim :distance) #\"(?i)(k\\.?(m\\.?)?|g?ch?ilim[eé]adai?r)\"]", :production "(-> %1 (dissoc :latent) (merge {:unit \"kilometre\", :normalized {:value (* 1000 (-> %1 :value)), :unit \"metre\"}}))"}
 #clj-duckling.engine/rule {:name "<latent dist> troigh", :pattern "[(dim :distance) #\"(?i)('|d?th?roi[tg]he?|tr\\.?)\"]", :production "(-> %1 (dissoc :latent) (merge {:unit \"foot\", :normalized {:value (* 0.3048 (-> %1 :value)), :unit \"metre\"}}))"}
 #clj-duckling.engine/rule {:name "<latent dist> orlach", :pattern "[(dim :distance) #\"(?i)(''|([nth]-?)?orl(ach|aigh|a[íi]|\\.))\"]", :production "(-> %1 (dissoc :latent) (merge {:unit \"inch\", :normalized {:value (* 0.0254 (-> %1 :value)), :unit \"metre\"}}))"}
 #clj-duckling.engine/rule {:name "<dist> m (ambiguous miles or meters)", :pattern "[(dim :distance) #\"(?i)m\"]", :production "(-> %1 (dissoc :latent) (merge {:unit \"m\"}))"}
 #clj-duckling.engine/rule {:name "number as volume", :pattern "(dim :number)", :production "{:dim :volume, :latent true, :value (:value %1)}"}
 #clj-duckling.engine/rule {:name "<latent vol> ml", :pattern "[(dim :volume) #\"(?i)m(l\\.?|h?illil[íi]t(ea|i)r)\"]", :production "(-> %1 (dissoc :latent) (merge {:unit \"millilitre\", :normalized {:value (* 0.001 (-> %1 :value)), :unit \"litre\"}}))"}
 #clj-duckling.engine/rule {:name "<latent vol> kl", :pattern "[(dim :volume) #\"(?i)(kl\\.?|g?ch?illil[íi]t(ea|i)r)\"]", :production "(-> %1 (dissoc :latent) (merge {:unit \"millilitre\", :normalized {:value (* 1000 (-> %1 :value)), :unit \"litre\"}}))"}
 #clj-duckling.engine/rule {:name "<vol> heictilítir", :pattern "[(dim :volume) #\"(?i)heictil[íi]t(ea|i)r\"]", :production "(-> %1 (dissoc :latent) (merge {:unit \"hectolitre\", :normalized {:value (* 100 (-> %1 :value)), :unit \"litre\"}}))"}
 #clj-duckling.engine/rule {:name "<vol> lítear", :pattern "[(dim :volume) #\"(?i)(l[íi]t(ea|i)r|l\\.?)\"]", :production "(-> %1 (dissoc :latent) (merge {:unit \"litre\"}))"}
 #clj-duckling.engine/rule {:name "leathlítear", :pattern "[#\"(?i)leathl[íi]t(ea|i)r\"]", :production "(-> %1 (dissoc :latent) (merge {:unit \"litre\", :value 0.5}))"}
 #clj-duckling.engine/rule {:name "<latent vol> galún", :pattern "[(dim :volume) #\"(?i)n?gh?al[úu]i?n\"]", :production "(-> %1 (dissoc :latent) (merge {:unit \"gallon\", :normalized {:value (* 3.785 (-> %1 :value)), :unit \"litre\"}}))"}
 #clj-duckling.engine/rule {:name "leathghalún", :pattern "[#\"(?i)leathgh?al[úu]i?n\"]", :production "(-> %1 (dissoc :latent) (merge {:unit \"gallon\", :value 0.5, :normalized {:value (* 1.8925 (-> %1 :value)), :unit \"litre\"}}))"}]