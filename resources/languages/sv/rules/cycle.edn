[#clj-duckling.engine/rule {:name "second (cycle)", :pattern "#\"(?i)sekund(er(na)?)?\"", :production "{:dim :cycle, :grain :second}"}
 #clj-duckling.engine/rule {:name "minute (cycle)", :pattern "#\"(?i)minut(er(na)?)?\"", :production "{:dim :cycle, :grain :minute}"}
 #clj-duckling.engine/rule {:name "hour (cycle)", :pattern "#\"(?i)t(imm(e(n)?|ar(na)?)?)?\"", :production "{:dim :cycle, :grain :hour}"}
 #clj-duckling.engine/rule {:name "day (cycle)", :pattern "#\"(?i)dag(en|ar(na)?)?\"", :production "{:dim :cycle, :grain :day}"}
 #clj-duckling.engine/rule {:name "week (cycle)", :pattern "#\"(?i)veck(or(na)?|a(n)?)?\"", :production "{:dim :cycle, :grain :week}"}
 #clj-duckling.engine/rule {:name "month (cycle)", :pattern "#\"(?i)månad(er(na)?)?\"", :production "{:dim :cycle, :grain :month}"}
 #clj-duckling.engine/rule {:name "quarter (cycle)", :pattern "#\"(?i)kvart(al)(et)?\"", :production "{:dim :cycle, :grain :quarter}"}
 #clj-duckling.engine/rule {:name "year (cycle)", :pattern "#\"(?i)år(en)?\"", :production "{:dim :cycle, :grain :year}"}
 #clj-duckling.engine/rule {:name "this <cycle>", :pattern "[#\"(?i)denna|detta|i|nuvarande\" (dim :cycle)]", :production "(cycle-nth (:grain %2) 0)"}
 #clj-duckling.engine/rule {:name "last <cycle>", :pattern "[#\"(?i)sista|senaste|förra\" (dim :cycle)]", :production "(cycle-nth (:grain %2) -1)"}
 #clj-duckling.engine/rule {:name "next <cycle>", :pattern "[#\"(?i)nästa|kommande\" (dim :cycle)]", :production "(cycle-nth (:grain %2) 1)"}
 #clj-duckling.engine/rule {:name "the <cycle> after <time>", :pattern "[(dim :cycle) #\"(en|na|et)? (?i)efter\" (dim :time)]", :production "(cycle-nth-after (:grain %1) 1 %3)"}
 #clj-duckling.engine/rule {:name "<cycle> after <time>", :pattern "[(dim :cycle) #\"(?i)efter\" (dim :time)]", :production "(cycle-nth-after (:grain %1) 1 %3)"}
 #clj-duckling.engine/rule {:name "the <cycle> before <time>", :pattern "[(dim :cycle) #\"(en|na|et)? (?i)före\" (dim :time)]", :production "(cycle-nth-after (:grain %1) -1 %3)"}
 #clj-duckling.engine/rule {:name "<cycle> before <time>", :pattern "[(dim :cycle) #\"(?i)före\" (dim :time)]", :production "(cycle-nth-after (:grain %1) -1 %3)"}
 #clj-duckling.engine/rule {:name "last n <cycle>", :pattern "[#\"(?i)sista|senaste|förra\" (integer 1 9999) (dim :cycle)]", :production "(cycle-n-not-immediate (:grain %3) (- (:value %2)))"}
 #clj-duckling.engine/rule {:name "next n <cycle>", :pattern "[#\"(?i)nästa\" (integer 1 9999) (dim :cycle)]", :production "(cycle-n-not-immediate (:grain %3) (:value %2))"}
 #clj-duckling.engine/rule {:name "<ordinal> <cycle> of <time>", :pattern "[(dim :ordinal) (dim :cycle) #\"(?i)av|i|från\" (dim :time)]", :production "(cycle-nth-after-not-immediate (:grain %2) (dec (:value %1)) %4)"}
 #clj-duckling.engine/rule {:name "the <ordinal> <cycle> of <time>", :pattern "[#\"(?i)den\" (dim :ordinal) (dim :cycle) #\"(?i)av|i|från\" (dim :time)]", :production "(cycle-nth-after-not-immediate (:grain %3) (dec (:value %2)) %5)"}
 #clj-duckling.engine/rule {:name "the <cycle> of <time>", :pattern "[(dim :cycle) #\"(en|na|et)? (?i)av\" (dim :time)]", :production "(cycle-nth-after-not-immediate (:grain %1) 0 %3)"}
 #clj-duckling.engine/rule {:name "<ordinal> <cycle> after <time>", :pattern "[(dim :ordinal) (dim :cycle) #\"(?i)efter\" (dim :time)]", :production "(cycle-nth-after-not-immediate (:grain %2) (dec (:value %1)) %4)"}
 #clj-duckling.engine/rule {:name "the <ordinal> <cycle> after <time>", :pattern "[#\"(?i)den\" (dim :ordinal) (dim :cycle) #\"(?i)efter\" (dim :time)]", :production "(cycle-nth-after-not-immediate (:grain %3) (dec (:value %2)) %5)"}
 #clj-duckling.engine/rule {:name "<ordinal> quarter", :pattern "[(dim :ordinal) (dim :cycle (fn* [p1__3547#] (= :quarter (:grain p1__3547#))))]", :production "(cycle-nth-after :quarter (dec (:value %1)) (cycle-nth :year 0))"}
 #clj-duckling.engine/rule {:name "<ordinal> quarter <year>", :pattern "[(dim :ordinal) (dim :cycle (fn* [p1__3548#] (= :quarter (:grain p1__3548#)))) (dim :time)]", :production "(cycle-nth-after :quarter (dec (:value %1)) %3)"}]