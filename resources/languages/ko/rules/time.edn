[#clj-duckling.engine/rule {:name "intersect", :pattern "[(dim :time (fn* [p1__3561#] (not (:latent p1__3561#)))) (dim :time (fn* [p1__3562#] (not (:latent p1__3562#))))]", :production "(intersect %1 %2)"}
 #clj-duckling.engine/rule {:name "intersect by \",\"", :pattern "[(dim :time (fn* [p1__3563#] (not (:latent p1__3563#)))) #\",\" (dim :time (fn* [p1__3564#] (not (:latent p1__3564#))))]", :production "(intersect %1 %3)"}
 #clj-duckling.engine/rule {:name "<date>에", :pattern "[(dim :time) #\"에\"]", :production "%1"}
 #clj-duckling.engine/rule {:name "<named-day>에", :pattern "[{:form :day-of-week} #\"에\"]", :production "%1"}
 #clj-duckling.engine/rule {:name "<named-month>에", :pattern "[{:form :month} #\"에\"]", :production "%1"}
 #clj-duckling.engine/rule {:name "day-of-week", :pattern "#\"(월|화|수|목|금|토|일)(요일|욜)\"", :production "(->> (-> %1 :groups first) (get {\"월\" 1, \"화\" 2, \"수\" 3, \"목\" 4, \"금\" 5, \"토\" 6, \"일\" 7}) day-of-week)"}
 #clj-duckling.engine/rule {:name "month", :pattern "[(integer 1 12) #\"월\"]", :production "(month (:value %1))"}
 #clj-duckling.engine/rule {:name "day", :pattern "[(integer 1 31) #\"일\"]", :production "(day-of-month (:value %1))"}
 #clj-duckling.engine/rule {:name "day with korean number - 십일..삼십일일", :pattern "#\"([이|삼]?십[일|이|삼|사|오|육|칠|팔|구]?)일\"", :production "(let [map-number (fn* [p1__3565#] (or (get {\\칠 7, \\육 6, \\오 5, \\사 4, \\구 9, \\십 1, \\팔 8, \\이 2, \\삼 3, \\일 1} p1__3565#) 0)) number (re-matches #\"(.*십)?(.*)?\" (first (:groups %1)))] (day-of-month (+ (* 10 (map-number (first (number 1)))) (map-number (first (number 2))))))"}
 #clj-duckling.engine/rule {:name "day with korean number - 일일..구일", :pattern "#\"([일|이|삼|사|오|육|칠|팔|구])일\"", :production "(day-of-month (get {\"육\" 6, \"칠\" 7, \"삼\" 3, \"사\" 4, \"팔\" 8, \"일\" 1, \"구\" 9, \"이\" 2, \"오\" 5} (first (:groups %1))))"}
 #clj-duckling.engine/rule {:name "New Year's Day", :pattern "#\"신정|설날\"", :production "(month-day 1 1)"}
 #clj-duckling.engine/rule {:name "Independence Movement Day", :pattern "#\"삼일절\"", :production "(month-day 3 1)"}
 #clj-duckling.engine/rule {:name "Children's Day", :pattern "#\"어린이날\"", :production "(month-day 5 5)"}
 #clj-duckling.engine/rule {:name "Memorial Day", :pattern "#\"현충일\"", :production "(month-day 6 6)"}
 #clj-duckling.engine/rule {:name "Constitution Day", :pattern "#\"제헌절\"", :production "(month-day 6 17)"}
 #clj-duckling.engine/rule {:name "Liberation Day", :pattern "#\"광복절\"", :production "(month-day 8 15)"}
 #clj-duckling.engine/rule {:name "National Foundation Day", :pattern "#\"개천절\"", :production "(month-day 10 3)"}
 #clj-duckling.engine/rule {:name "Hangul Day", :pattern "#\"한글날\"", :production "(month-day 10 9)"}
 #clj-duckling.engine/rule {:name "christmas eve", :pattern "#\"(크리스마스)?이브\"", :production "(month-day 12 24)"}
 #clj-duckling.engine/rule {:name "christmas", :pattern "#\"크리스마스\"", :production "(month-day 12 25)"}
 #clj-duckling.engine/rule {:name "absorption of , after named day", :pattern "[{:form :day-of-week} #\",\"]", :production "%1"}
 #clj-duckling.engine/rule {:name "now", :pattern "#\"방금|지금|방금|막\"", :production "(cycle-nth :second 0)"}
 #clj-duckling.engine/rule {:name "today", :pattern "#\"오늘|당일|금일\"", :production "(cycle-nth :day 0)"}
 #clj-duckling.engine/rule {:name "tomorrow", :pattern "#\"내일|명일|낼\"", :production "(cycle-nth :day 1)"}
 #clj-duckling.engine/rule {:name "yesterday", :pattern "#\"어제\"", :production "(cycle-nth :day -1)"}
 #clj-duckling.engine/rule {:name "end of <time>", :pattern "[(dim :time) #\"말\"]", :production "(pred-nth %1 1)"}
 #clj-duckling.engine/rule {:name "this <day-of-week>", :pattern "[#\"이번주?|금주\" {:form :day-of-week}]", :production "(pred-nth %2 0)"}
 #clj-duckling.engine/rule {:name "this <time>", :pattern "[#\"이번\" (dim :time)]", :production "(pred-nth %2 0)"}
 #clj-duckling.engine/rule {:name "next <time>", :pattern "[#\"다음|오는\" (dim :time (fn* [p1__3566#] (not (:latent p1__3566#))))]", :production "(pred-nth %2 1)"}
 #clj-duckling.engine/rule {:name "last <time>", :pattern "[#\"전|저번|지난\" (dim :time)]", :production "(pred-nth %2 -1)"}
 #clj-duckling.engine/rule {:name "<time> after next", :pattern "[(dim :time) #\"(?i)after next\"]", :production "(pred-nth-not-immediate %1 1)"}
 #clj-duckling.engine/rule {:name "<time> 마지막 <day-of-week>", :pattern "[(dim :time) #\"마지막\" {:form :day-of-week}]", :production "(pred-last-of %3 %1)"}
 #clj-duckling.engine/rule {:name "<time> 마지막 <cycle>", :pattern "[(dim :time) #\"마지막\" (dim :cycle)]", :production "(cycle-last-of %3 %1)"}
 #clj-duckling.engine/rule {:name "<time> nth <time> - 3월 첫째 화요일", :pattern "[(dim :time) (dim :ordinal) (dim :time)]", :production "(pred-nth (intersect %1 %3) (dec (:value %2)))"}
 #clj-duckling.engine/rule {:name "year", :pattern "(integer 1000 2100)", :production "(year (:value %1))"}
 #clj-duckling.engine/rule {:name "year (latent)", :pattern "(integer -10000 999)", :production "(assoc (year (:value %1)) :latent true)"}
 #clj-duckling.engine/rule {:name "year (latent)", :pattern "(integer 2101 10000)", :production "(assoc (year (:value %1)) :latent true)"}
 #clj-duckling.engine/rule {:name "year", :pattern "[(integer 1) #\"년\"]", :production "(year (:value %1))"}
 #clj-duckling.engine/rule {:name "time-of-day (latent)", :pattern "(integer 0 23)", :production "(assoc (hour (:value %1) true) :latent true)"}
 #clj-duckling.engine/rule {:name "time-of-day", :pattern "[(integer 0 24) #\"시\"]", :production "(hour (:value %1) true)"}
 #clj-duckling.engine/rule {:name "<time-of-day>에", :pattern "[{:form :time-of-day} #\"에\"]", :production "(dissoc %2 :latent)"}
 #clj-duckling.engine/rule {:name "<time-of-day> 정각", :pattern "[{:form :time-of-day} #\"정각\"]", :production "(dissoc %1 :latent)"}
 #clj-duckling.engine/rule {:name "hh:mm", :pattern "#\"(?i)((?:[01]?\\d)|(?:2[0-3]))[:.]([0-5]\\d)\"", :production "(hour-minute (Integer/parseInt (first (:groups %1))) (Integer/parseInt (second (:groups %1))) true)"}
 #clj-duckling.engine/rule {:name "hh:mm:ss", :pattern "#\"(?i)((?:[01]?\\d)|(?:2[0-3]))[:.]([0-5]\\d)[:.]([0-5]\\d)\"", :production "(hour-minute-second (Integer/parseInt (first (:groups %1))) (Integer/parseInt (second (:groups %1))) (Integer/parseInt (second (next (:groups %1)))) true)"}
 #clj-duckling.engine/rule {:name "hhmm (military) am|pm", :pattern "[#\"(?i)((?:1[012]|0?\\d))([0-5]\\d)\" #\"(?i)([ap])\\.?m?\\.?\"]", :production "(let [[p meridiem] (if (= \"a\" (-> %2 :groups first clojure.string/lower-case)) [[(hour 0) (hour 12) false] :am] [[(hour 12) (hour 0) false] :pm])] (-> (intersect (hour-minute (Integer/parseInt (first (:groups %1))) (Integer/parseInt (second (:groups %1))) true) (apply interval p)) (assoc :form :time-of-day)))"}
 #clj-duckling.engine/rule {:name "<time-of-day> am|pm", :pattern "[{:form :time-of-day} #\"(?i)(in the )?([ap])(\\s|\\.)?m?\\.?\"]", :production "(let [[p meridiem] (if (= \"a\" (-> %2 :groups second clojure.string/lower-case)) [[(hour 0) (hour 12) false] :am] [[(hour 12) (hour 0) false] :pm])] (-> (intersect %1 (apply interval p)) (assoc :form :time-of-day)))"}
 #clj-duckling.engine/rule {:name "am|pm <time-of-day>", :pattern "[#\"오전|아침|오후|저녁\" {:form :time-of-day}]", :production "(let [[p meridiem] (if (or (= \"오전\" (:text %1)) (= \"아침\" (:text %1))) [[(hour 0) (hour 12) false] :am] [[(hour 12) (hour 0) false] :pm])] (-> (intersect %2 (apply interval p)) (assoc :form :time-of-day)))"}
 #clj-duckling.engine/rule {:name "noon", :pattern "#\"정오\"", :production "(hour 12 false)"}
 #clj-duckling.engine/rule {:name "midnight|EOD|end of day", :pattern "#\"자정\"", :production "(hour 0 false)"}
 #clj-duckling.engine/rule {:name "half (relative minutes)", :pattern "#\"반\"", :production "{:relative-minutes 30}"}
 #clj-duckling.engine/rule {:name "number (as relative minutes)", :pattern "[(integer 1 59) #\"분\"]", :production "{:relative-minutes (:value %1)}"}
 #clj-duckling.engine/rule {:name "<hour-of-day> <integer> (as relative minutes)", :pattern "[(dim :time :full-hour) (fn* [p1__3567#] (:relative-minutes p1__3567#))]", :production "(hour-relativemin (:full-hour %1) (:relative-minutes %2) true)"}
 #clj-duckling.engine/rule {:name "<integer> (hour-of-day) relative minutes 전", :pattern "[(dim :time :full-hour) (fn* [p1__3568#] (:relative-minutes p1__3568#)) #\"전\"]", :production "(hour-relativemin (:full-hour %1) (- (:relative-minutes %2)) true)"}
 #clj-duckling.engine/rule {:name "seconds", :pattern "[(integer 1 59) #\"초\"]", :production "(sec (:value %1))"}
 #clj-duckling.engine/rule {:name "mm/dd/yyyy", :pattern "#\"(\\d{2,4})[-/](0?[1-9]|1[0-2])[/-](3[01]|[12]\\d|0?[1-9])\"", :production "(parse-dmy (nth (:groups %1) 2) (second (:groups %1)) (first (:groups %1)) true)"}
 #clj-duckling.engine/rule {:name "yyyy-mm-dd", :pattern "#\"(\\d{2,4})-(0?[1-9]|1[0-2])-(3[01]|[12]\\d|0?[1-9])\"", :production "(parse-dmy (nth (:groups %1) 2) (second (:groups %1)) (first (:groups %1)) true)"}
 #clj-duckling.engine/rule {:name "mm/dd", :pattern "#\"(0?[1-9]|1[0-2])/(3[01]|[12]\\d|0?[1-9])\"", :production "(parse-dmy (second (:groups %1)) (first (:groups %1)) nil true)"}
 #clj-duckling.engine/rule {:name "morning", :pattern "#\"아침\"", :production "(assoc (interval (hour 4 false) (hour 12 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "afternoon", :pattern "#\"오후\"", :production "(assoc (interval (hour 12 false) (hour 19 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "evening|night", :pattern "#\"저녁|밤\"", :production "(assoc (interval (hour 18 false) (hour 0 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "lunch", :pattern "#\"점심\"", :production "(assoc (interval (hour 12 false) (hour 14 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "in|during the <part-of-day>", :pattern "[{:form :part-of-day} #\"에|동안\"]", :production "(dissoc %1 :latent)"}
 #clj-duckling.engine/rule {:name "after <part-of-day>", :pattern "[{:form :part-of-day} #\"지나서|후에\"]", :production "(assoc (intersect (cycle-nth :day 0) (interval (hour (inc (:start %1)) false) (hour (inc (:end %1)) false) false)) :form :part-of-day)"}
 #clj-duckling.engine/rule {:name "<time> <part-of-day>", :pattern "[(dim :time) {:form :part-of-day}]", :production "(intersect %2 %1)"}
 #clj-duckling.engine/rule {:name "week-end", :pattern "#\"주말\"", :production "(interval (intersect (day-of-week 5) (hour 18 false)) (intersect (day-of-week 1) (hour 0 false)) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"여름\"", :production "(interval (month-day 6 21) (month-day 9 23) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"가을\"", :production "(interval (month-day 9 23) (month-day 12 21) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"겨울\"", :production "(interval (month-day 12 21) (month-day 3 20) false)"}
 #clj-duckling.engine/rule {:name "season", :pattern "#\"봄\"", :production "(interval (month-day 3 20) (month-day 6 21) false)"}
 #clj-duckling.engine/rule {:name "timezone", :pattern "#\"(?i)\\b(YEKT|YEKST|YAPT|YAKT|YAKST|WT|WST|WITA|WIT|WIB|WGT|WGST|WFT|WEZ|WET|WESZ|WEST|WAT|WAST|VUT|VLAT|VLAST|VET|UZT|UYT|UYST|UTC|ULAT|TVT|TMT|TLT|TKT|TJT|TFT|TAHT|SST|SRT|SGT|SCT|SBT|SAST|SAMT|RET|PYT|PYST|PWT|PT|PST|PONT|PMST|PMDT|PKT|PHT|PHOT|PGT|PETT|PETST|PET|PDT|OMST|OMSST|NZST|NZDT|NUT|NST|NPT|NOVT|NOVST|NFT|NDT|NCT|MYT|MVT|MUT|MST|MSK|MSD|MMT|MHT|MEZ|MESZ|MDT|MAWT|MART|MAGT|MAGST|LINT|LHST|LHDT|KUYT|KST|KRAT|KRAST|KGT|JST|IST|IRST|IRKT|IRKST|IRDT|IOT|IDT|ICT|HOVT|HNY|HNT|HNR|HNP|HNE|HNC|HNA|HLV|HKT|HAY|HAT|HAST|HAR|HAP|HAE|HADT|HAC|HAA|GYT|GST|GMT|GILT|GFT|GET|GAMT|GALT|FNT|FKT|FKST|FJT|FJST|ET|EST|EGT|EGST|EET|EEST|EDT|ECT|EAT|EAST|EASST|DAVT|ChST|CXT|CVT|CST|COT|CLT|CLST|CKT|CHAST|CHADT|CET|CEST|CDT|CCT|CAT|CAST|BTT|BST|BRT|BRST|BOT|BNT|AZT|AZST|AZOT|AZOST|AWST|AWDT|AST|ART|AQTT|ANAT|ANAST|AMT|AMST|ALMT|AKST|AKDT|AFT|AEST|AEDT|ADT|ACST|ACDT)\\b\"", :production "{:dim :timezone, :value (-> %1 :groups first clojure.string/upper-case)}"}
 #clj-duckling.engine/rule {:name "<time> timezone", :pattern "[(dim :time) (dim :timezone)]", :production "(set-timezone %1 (:value %2))"}
 #clj-duckling.engine/rule {:name "<time-of-day> approximately", :pattern "[{:form :time-of-day} #\"정도|쯤\"]", :production "(-> %1 (dissoc :latent) (merge {:precision \"approximate\"}))"}
 #clj-duckling.engine/rule {:name "about <time-of-day>", :pattern "[#\"대충|약\" {:form :time-of-day}]", :production "(-> %2 (dissoc :latent) (merge {:precision \"approximate\"}))"}
 #clj-duckling.engine/rule {:name "exactly <time-of-day>", :pattern "[{:form :time-of-day} #\"정각\"]", :production "(-> %1 (dissoc :latent) (merge {:precision \"exact\"}))"}
 #clj-duckling.engine/rule {:name "<datetime> - <datetime> (interval)", :pattern "[(dim :time (fn* [p1__3569#] (not (:latent p1__3569#)))) #\"\\-|\\~|부터\" (dim :time (fn* [p1__3570#] (not (:latent p1__3570#))))]", :production "(interval %1 %3 true)"}
 #clj-duckling.engine/rule {:name "<time-of-day> - <time-of-day> (interval)", :pattern "[(fn* [p1__3571#] (and (= :time-of-day (:form p1__3571#)) (not (:latent p1__3571#)))) #\"\\-|\\~|부터\" {:form :time-of-day}]", :production "(interval %1 %3 true)"}
 #clj-duckling.engine/rule {:name "within <duration>", :pattern "[(dim :duration) #\"이내에?\"]", :production "(interval (cycle-nth :second 0) (in-duration (:value %1)) false)"}
 #clj-duckling.engine/rule {:name "by <time> - 까지", :pattern "[(dim :time) #\"까지\"]", :production "(interval (cycle-nth :second 0) %1 false)"}
 #clj-duckling.engine/rule {:name "<time-of-day>이전", :pattern "[(dim :time) #\"이?전\"]", :production "(merge %1 {:direction :before})"}
 #clj-duckling.engine/rule {:name "after <time-of-day>", :pattern "[(dim :time) #\"지나서|이?후에?\"]", :production "(merge %1 {:direction :after})"}
 #clj-duckling.engine/rule {:name "since <time-of-day>", :pattern "[(dim :time) #\"이래로\"]", :production "(merge (pred-nth %2 -1) {:direction :after})"}]