[#clj-duckling.engine/rule {:name "intersect", :pattern "[(dim :time (fn* [p1__3548#] (not (:latent p1__3548#)))) (dim :time (fn* [p1__3549#] (not (:latent p1__3549#))))]", :production "(intersect %1 %2)"}
 #clj-duckling.engine/rule {:name "intersect by \",\"", :pattern "[(dim :time (fn* [p1__3550#] (not (:latent p1__3550#)))) #\",\" (dim :time (fn* [p1__3551#] (not (:latent p1__3551#))))]", :production "(intersect %1 %3)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"星期一|周一|礼拜一|禮拜一|週一\"", :production "(day-of-week 1)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"星期二|周二|礼拜二|禮拜二|週二\"", :production "(day-of-week 2)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"星期三|周三|礼拜三|禮拜三|週三\"", :production "(day-of-week 3)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"星期四|周四|礼拜四|禮拜四|週四\"", :production "(day-of-week 4)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"星期五|周五|礼拜五|禮拜五|週五\"", :production "(day-of-week 5)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"星期六|周六|礼拜六|禮拜六|週六\"", :production "(day-of-week 6)"}
 #clj-duckling.engine/rule {:name "named-day", :pattern "#\"星期日|星期天|礼拜天|周日|禮拜天|週日\"", :production "(day-of-week 7)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"一月份?\"", :production "(month 1)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"二月份?\"", :production "(month 2)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"三月份?\"", :production "(month 3)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"四月份?\"", :production "(month 4)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"五月份?\"", :production "(month 5)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"六月份?\"", :production "(month 6)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"七月份?\"", :production "(month 7)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"八月份?\"", :production "(month 8)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"九月份?\"", :production "(month 9)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"十月份?\"", :production "(month 10)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"十一月份?\"", :production "(month 11)"}
 #clj-duckling.engine/rule {:name "named-month", :pattern "#\"十二月份?\"", :production "(month 12)"}
 #clj-duckling.engine/rule {:name "new year's day", :pattern "#\"元旦[节節]?\"", :production "(month-day 1 1)"}
 #clj-duckling.engine/rule {:name "valentine's day", :pattern "#\"情人[节節]\"", :production "(month-day 2 14)"}
 #clj-duckling.engine/rule {:name "women's day", :pattern "#\"[妇婦]女[节節]\"", :production "(month-day 3 8)"}
 #clj-duckling.engine/rule {:name "labor day", :pattern "#\"劳动节|勞動節\"", :production "(month-day 5 1)"}
 #clj-duckling.engine/rule {:name "children's day", :pattern "#\"[儿兒]童[节節]\"", :production "(month-day 6 1)"}
 #clj-duckling.engine/rule {:name "army's day", :pattern "#\"建(军节|軍節)\"", :production "(month-day 8 1)"}
 #clj-duckling.engine/rule {:name "national day", :pattern "#\"(国庆|國慶)[节節]?\"", :production "(month-day 10 1)"}
 #clj-duckling.engine/rule {:name "christmas", :pattern "#\"(圣诞|聖誕)[节節]?\"", :production "(month-day 12 25)"}
 #clj-duckling.engine/rule {:name "now", :pattern "#\"现在|此时|此刻|当前|現在|此時|當前\"", :production "(cycle-nth :second 0)"}
 #clj-duckling.engine/rule {:name "the day before yesterday", :pattern "#\"前天\"", :production "(cycle-nth :day -2)"}
 #clj-duckling.engine/rule {:name "yesterday", :pattern "#\"昨天\"", :production "(cycle-nth :day -1)"}
 #clj-duckling.engine/rule {:name "today", :pattern "#\"今天\"", :production "(cycle-nth :day 0)"}
 #clj-duckling.engine/rule {:name "tomorrow", :pattern "#\"明天\"", :production "(cycle-nth :day 1)"}
 #clj-duckling.engine/rule {:name "the day after tomorrow", :pattern "#\"后天|後天\"", :production "(cycle-nth :day 2)"}
 #clj-duckling.engine/rule {:name "this|next <day-of-week>", :pattern "[#\"(?i)今|明|下[个|個]?\" {:form :day-of-week}]", :production "(pred-nth-not-immediate %2 0)"}
 #clj-duckling.engine/rule {:name "this <time>", :pattern "[#\"(?i)今|这|這\" (dim :time)]", :production "(pred-nth %2 0)"}
 #clj-duckling.engine/rule {:name "next <time>", :pattern "[#\"(?i)明|下[个|個]?\" (dim :time)]", :production "(pred-nth %2 1)"}
 #clj-duckling.engine/rule {:name "last <time>", :pattern "[#\"(?i)去\" (dim :time)]", :production "(pred-nth %2 -1)"}
 #clj-duckling.engine/rule {:name "nth <time> of <time>", :pattern "[(dim :time) (dim :ordinal) (dim :time)]", :production "(pred-nth (intersect %1 %3) (dec (:value %2)))"}
 #clj-duckling.engine/rule {:name "nth <time> of <time>", :pattern "[(dim :time) #\"的\" (dim :ordinal) (dim :time)]", :production "(pred-nth (intersect %1 %4) (dec (:value %3)))"}
 #clj-duckling.engine/rule {:name "last year", :pattern "#\"去年\"", :production "(cycle-nth :year -1)"}
 #clj-duckling.engine/rule {:name "this year", :pattern "#\"今年\"", :production "(cycle-nth :year 0)"}
 #clj-duckling.engine/rule {:name "next year", :pattern "#\"明年\"", :production "(cycle-nth :year 1)"}
 #clj-duckling.engine/rule {:name "this <day-of-week>", :pattern "[#\"这|這\" {:form :named-day}]", :production "(pred-nth %2 0)"}
 #clj-duckling.engine/rule {:name "last tuesday, last july", :pattern "[#\"上\" (dim :time)]", :production "(pred-nth %2 -1)"}
 #clj-duckling.engine/rule {:name "morning", :pattern "[#\"早上|早晨\"]", :production "(assoc (interval (hour 4 false) (hour 12 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "afternoon", :pattern "[#\"下午|中午\"]", :production "(assoc (interval (hour 12 false) (hour 19 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "evening|night", :pattern "[#\"晚上|晚间\"]", :production "(assoc (interval (hour 18 false) (hour 0 false) false) :form :part-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "<dim time> <part-of-day>", :pattern "[(dim :time) {:form :part-of-day}]", :production "(intersect %1 %2)"}
 #clj-duckling.engine/rule {:name "day of month (numeric with day symbol)", :pattern "[(dim :number) #\"号|號|日\"]", :production "(assoc (day-of-month (:value %1)) :latent true :form :day-of-month)"}
 #clj-duckling.engine/rule {:name "month (numeric with month symbol)", :pattern "[(integer 1 12) #\"月\"]", :production "(assoc (month (:value %1)) :latent true :form :named-month)"}
 #clj-duckling.engine/rule {:name "year (numeric with year symbol)", :pattern "[(integer 1000 9999) #\"年\"]", :production "(year (:value %1))"}
 #clj-duckling.engine/rule {:name "absorption of , after named day", :pattern "[{:form :named-day} #\",\"]", :production "%1"}
 #clj-duckling.engine/rule {:name "<named-month> <day-of-month>", :pattern "[{:form :named-month} {:form :day-of-month}]", :production "(intersect %1 %2)"}
 #clj-duckling.engine/rule {:name "<integer> (latent time-of-day)", :pattern "(integer 0 23)", :production "(assoc (hour (:value %1) true) :form :time-of-day :latent true)"}
 #clj-duckling.engine/rule {:name "last night", :pattern "[#\"昨晚|昨天晚上\"]", :production "(assoc (intersect (cycle-nth :day -1) (interval (hour 18 false) (hour 0 false) false)) :form :part-of-day)"}
 #clj-duckling.engine/rule {:name "tonight", :pattern "[#\"今晚|今天晚上\"]", :production "(assoc (intersect (cycle-nth :day 0) (interval (hour 18 false) (hour 0 false) false)) :form :part-of-day)"}
 #clj-duckling.engine/rule {:name "tomorrow night", :pattern "[#\"明晚|明天晚上\"]", :production "(assoc (intersect (cycle-nth :day 1) (interval (hour 18 false) (hour 0 false) false)) :form :part-of-day)"}
 #clj-duckling.engine/rule {:name "in|during the <part-of-day>", :pattern "[{:form :part-of-day} #\"点|點\"]", :production "(dissoc %1 :latent)"}
 #clj-duckling.engine/rule {:name "<time-of-day> o'clock", :pattern "[{:form :time-of-day} #\"點|点\"]", :production "(dissoc %1 :latent)"}
 #clj-duckling.engine/rule {:name "hh:mm (time-of-day)", :pattern "#\"(?i)((?:[01]?\\d)|(?:2[0-3])):([0-5]\\d)\"", :production "(hour-minute (Integer/parseInt (first (:groups %1))) (Integer/parseInt (second (:groups %1))) true)"}
 #clj-duckling.engine/rule {:name "hhmm (military time-of-day)", :pattern "#\"(?i)((?:[01]?\\d)|(?:2[0-3]))([0-5]\\d)\"", :production "(-> (hour-minute (Integer/parseInt (first (:groups %1))) (Integer/parseInt (second (:groups %1))) false) (assoc :latent true))"}
 #clj-duckling.engine/rule {:name "<time-of-day> am|pm", :pattern "[{:form :time-of-day} #\"(?i)([ap])(\\s|\\.)?m?\\.?\"]", :production "(let [[p meridiem] (if (= \"a\" (-> %2 :groups first clojure.string/lower-case)) [[(hour 0) (hour 12) false] :am] [[(hour 12) (hour 0) false] :pm])] (-> (intersect %1 (apply interval p)) (assoc :form :time-of-day)))"}
 #clj-duckling.engine/rule {:name "<part-of-day> <dim time>", :pattern "[{:form :part-of-day} (dim :time)]", :production "(intersect %1 %2)"}
 #clj-duckling.engine/rule {:name "noon", :pattern "#\"中午\"", :production "(hour 12 false)"}
 #clj-duckling.engine/rule {:name "midnight", :pattern "#\"午夜|凌晨\"", :production "(hour 0 false)"}
 #clj-duckling.engine/rule {:name "quarter (relative minutes)", :pattern "#\"一刻\"", :production "{:relative-minutes 15}"}
 #clj-duckling.engine/rule {:name "half (relative minutes)", :pattern "#\"半\"", :production "{:relative-minutes 30}"}
 #clj-duckling.engine/rule {:name "number (as relative minutes)", :pattern "(integer 1 59)", :production "{:relative-minutes (:value %1)}"}
 #clj-duckling.engine/rule {:name "relative minutes after|past <integer> (hour-of-day)", :pattern "[(dim :time :full-hour) #\"点|點\" (fn* [p1__3552#] (:relative-minutes p1__3552#))]", :production "(hour-relativemin (:full-hour %1) (:relative-minutes %3) true)"}
 #clj-duckling.engine/rule {:name "relative minutes to|till|before <integer> (hour-of-day)", :pattern "[(dim :time :full-hour) #\"[点點]差\" (fn* [p1__3553#] (:relative-minutes p1__3553#))]", :production "(hour-relativemin (:full-hour %1) (- (:relative-minutes %3)) true)"}
 #clj-duckling.engine/rule {:name "relative minutes to|till|before noon|midnight", :pattern "[(fn* [p1__3554#] (:for-relative-minutes p1__3554#)) #\"差\" (fn* [p1__3555#] (:relative-minutes p1__3555#))]", :production "(hour-relativemin (:value %1) true (- (:relative-minutes %3)))"}
 #clj-duckling.engine/rule {:name "relative minutes after|past noon|midnight", :pattern "[(fn* [p1__3556#] (:for-relative-minutes p1__3556#)) #\"过\" (fn* [p1__3557#] (:relative-minutes p1__3557#))]", :production "(hour-relativemin (:value %1) true (:relative-minutes %3))"}
 #clj-duckling.engine/rule {:name "mm/dd/yyyy", :pattern "#\"(0?[1-9]|1[0-2])/(3[01]|[12]\\d|0?[1-9])/(\\d{2,4})\"", :production "(parse-dmy (second (:groups %1)) (first (:groups %1)) (nth (:groups %1) 2) true)"}
 #clj-duckling.engine/rule {:name "yyyy-mm-dd", :pattern "#\"(\\d{2,4})-(0?[1-9]|1[0-2])-(3[01]|[12]\\d|0?[1-9])\"", :production "(parse-dmy (nth (:groups %1) 2) (second (:groups %1)) (first (:groups %1)) true)"}
 #clj-duckling.engine/rule {:name "mm/dd", :pattern "#\"(0?[1-9]|1[0-2])/(3[01]|[12]\\d|0?[1-9])\"", :production "(parse-dmy (second (:groups %1)) (first (:groups %1)) nil true)"}
 #clj-duckling.engine/rule {:name "week-end", :pattern "#\"周末|週末\"", :production "(interval (intersect (day-of-week 5) (hour 18 false)) (intersect (day-of-week 1) (hour 0 false)) false)"}
 #clj-duckling.engine/rule {:name "timezone", :pattern "#\"(?i)(YEKT|YEKST|YAPT|YAKT|YAKST|WT|WST|WITA|WIT|WIB|WGT|WGST|WFT|WEZ|WET|WESZ|WEST|WAT|WAST|VUT|VLAT|VLAST|VET|UZT|UYT|UYST|UTC|ULAT|TVT|TMT|TLT|TKT|TJT|TFT|TAHT|SST|SRT|SGT|SCT|SBT|SAST|SAMT|RET|PYT|PYST|PWT|PT|PST|PONT|PMST|PMDT|PKT|PHT|PHOT|PGT|PETT|PETST|PET|PDT|OMST|OMSST|NZST|NZDT|NUT|NST|NPT|NOVT|NOVST|NFT|NDT|NCT|MYT|MVT|MUT|MST|MSK|MSD|MMT|MHT|MEZ|MESZ|MDT|MAWT|MART|MAGT|MAGST|LINT|LHST|LHDT|KUYT|KST|KRAT|KRAST|KGT|JST|IST|IRST|IRKT|IRKST|IRDT|IOT|IDT|ICT|HOVT|HNY|HNT|HNR|HNP|HNE|HNC|HNA|HLV|HKT|HAY|HAT|HAST|HAR|HAP|HAE|HADT|HAC|HAA|GYT|GST|GMT|GILT|GFT|GET|GAMT|GALT|FNT|FKT|FKST|FJT|FJST|ET|EST|EGT|EGST|EET|EEST|EDT|ECT|EAT|EAST|EASST|DAVT|ChST|CXT|CVT|CST|COT|CLT|CLST|CKT|CHAST|CHADT|CET|CEST|CDT|CCT|CAT|CAST|BTT|BST|BRT|BRST|BOT|BNT|AZT|AZST|AZOT|AZOST|AWST|AWDT|AST|ART|AQTT|ANAT|ANAST|AMT|AMST|ALMT|AKST|AKDT|AFT|AEST|AEDT|ADT|ACST|ACDT)\"", :production "{:dim :timezone, :value (-> %1 :groups first clojure.string/upper-case)}"}
 #clj-duckling.engine/rule {:name "<time> timezone", :pattern "[(dim :time) (dim :timezone)]", :production "(assoc %1 :timezone (:value %2))"}]